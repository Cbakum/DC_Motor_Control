
DC_Motor_Control.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000220  00800100  0000180a  0000189e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000180a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000d  00800320  00800320  00001abe  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001abe  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001af0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000178  00000000  00000000  00001b30  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000016da  00000000  00000000  00001ca8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d87  00000000  00000000  00003382  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000138f  00000000  00000000  00004109  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000005ec  00000000  00000000  00005498  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000975  00000000  00000000  00005a84  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000c64  00000000  00000000  000063f9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000148  00000000  00000000  0000705d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 ba 00 	jmp	0x174	; 0x174 <__ctors_end>
       4:	0c 94 4f 02 	jmp	0x49e	; 0x49e <__vector_1>
       8:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__bad_interrupt>
       c:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__bad_interrupt>
      10:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__bad_interrupt>
      14:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__bad_interrupt>
      18:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__bad_interrupt>
      1c:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__bad_interrupt>
      20:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__bad_interrupt>
      24:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__bad_interrupt>
      28:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__bad_interrupt>
      2c:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__bad_interrupt>
      30:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__bad_interrupt>
      34:	0c 94 6f 02 	jmp	0x4de	; 0x4de <__vector_13>
      38:	0c 94 97 02 	jmp	0x52e	; 0x52e <__vector_14>
      3c:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__bad_interrupt>
      40:	0c 94 ba 01 	jmp	0x374	; 0x374 <__vector_16>
      44:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__bad_interrupt>
      48:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__bad_interrupt>
      4c:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__bad_interrupt>
      50:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__bad_interrupt>
      54:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__bad_interrupt>
      58:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__bad_interrupt>
      5c:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__bad_interrupt>
      60:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__bad_interrupt>
      64:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__bad_interrupt>
      68:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__bad_interrupt>
      6c:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__bad_interrupt>
      70:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__bad_interrupt>
      74:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__bad_interrupt>
      78:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__bad_interrupt>
      7c:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__bad_interrupt>
      80:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__bad_interrupt>
      84:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__bad_interrupt>
      88:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__bad_interrupt>
      8c:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__bad_interrupt>
      90:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__bad_interrupt>
      94:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__bad_interrupt>
      98:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__bad_interrupt>
      9c:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__bad_interrupt>
      a0:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__bad_interrupt>
      a4:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__bad_interrupt>
      a8:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__bad_interrupt>
      ac:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__bad_interrupt>
      b0:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__bad_interrupt>
      b4:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__bad_interrupt>
      b8:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__bad_interrupt>
      bc:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__bad_interrupt>
      c0:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__bad_interrupt>
      c4:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__bad_interrupt>
      c8:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__bad_interrupt>
      cc:	ae 08       	sbc	r10, r14
      ce:	b6 08       	sbc	r11, r6
      d0:	b6 08       	sbc	r11, r6
      d2:	b6 08       	sbc	r11, r6
      d4:	b6 08       	sbc	r11, r6
      d6:	b6 08       	sbc	r11, r6
      d8:	b6 08       	sbc	r11, r6
      da:	b6 08       	sbc	r11, r6
      dc:	b6 08       	sbc	r11, r6
      de:	b6 08       	sbc	r11, r6
      e0:	b6 08       	sbc	r11, r6
      e2:	b6 08       	sbc	r11, r6
      e4:	b6 08       	sbc	r11, r6
      e6:	b6 08       	sbc	r11, r6
      e8:	b6 08       	sbc	r11, r6
      ea:	b6 08       	sbc	r11, r6
      ec:	b6 08       	sbc	r11, r6
      ee:	b6 08       	sbc	r11, r6
      f0:	b6 08       	sbc	r11, r6
      f2:	b6 08       	sbc	r11, r6
      f4:	b6 08       	sbc	r11, r6
      f6:	b6 08       	sbc	r11, r6
      f8:	b6 08       	sbc	r11, r6
      fa:	b6 08       	sbc	r11, r6
      fc:	b6 08       	sbc	r11, r6
      fe:	b6 08       	sbc	r11, r6
     100:	b6 08       	sbc	r11, r6
     102:	b6 08       	sbc	r11, r6
     104:	b6 08       	sbc	r11, r6
     106:	64 08       	sbc	r6, r4
     108:	78 07       	cpc	r23, r24
     10a:	ae 07       	cpc	r26, r30
     10c:	b6 08       	sbc	r11, r6
     10e:	84 08       	sbc	r8, r4
     110:	b6 08       	sbc	r11, r6
     112:	b6 08       	sbc	r11, r6
     114:	b6 08       	sbc	r11, r6
     116:	b6 08       	sbc	r11, r6
     118:	b6 08       	sbc	r11, r6
     11a:	b6 08       	sbc	r11, r6
     11c:	b6 08       	sbc	r11, r6
     11e:	b6 08       	sbc	r11, r6
     120:	b6 08       	sbc	r11, r6
     122:	b6 08       	sbc	r11, r6
     124:	b6 08       	sbc	r11, r6
     126:	b6 08       	sbc	r11, r6
     128:	9d 08       	sbc	r9, r13
     12a:	b6 08       	sbc	r11, r6
     12c:	f9 07       	cpc	r31, r25
     12e:	b6 08       	sbc	r11, r6
     130:	b6 08       	sbc	r11, r6
     132:	2c 08       	sbc	r2, r12
     134:	b6 08       	sbc	r11, r6
     136:	b6 08       	sbc	r11, r6
     138:	b6 08       	sbc	r11, r6
     13a:	b6 08       	sbc	r11, r6
     13c:	b6 08       	sbc	r11, r6
     13e:	b6 08       	sbc	r11, r6
     140:	b6 08       	sbc	r11, r6
     142:	b6 08       	sbc	r11, r6
     144:	b6 08       	sbc	r11, r6
     146:	47 08       	sbc	r4, r7
     148:	78 07       	cpc	r23, r24
     14a:	87 07       	cpc	r24, r23
     14c:	b6 08       	sbc	r11, r6
     14e:	84 08       	sbc	r8, r4
     150:	b6 08       	sbc	r11, r6
     152:	b6 08       	sbc	r11, r6
     154:	b6 08       	sbc	r11, r6
     156:	b6 08       	sbc	r11, r6
     158:	b6 08       	sbc	r11, r6
     15a:	b6 08       	sbc	r11, r6
     15c:	b6 08       	sbc	r11, r6
     15e:	b6 08       	sbc	r11, r6
     160:	b6 08       	sbc	r11, r6
     162:	b6 08       	sbc	r11, r6
     164:	b6 08       	sbc	r11, r6
     166:	b6 08       	sbc	r11, r6
     168:	9d 08       	sbc	r9, r13
     16a:	b6 08       	sbc	r11, r6
     16c:	e1 07       	cpc	r30, r17
     16e:	b6 08       	sbc	r11, r6
     170:	b6 08       	sbc	r11, r6
     172:	14 08       	sbc	r1, r4

00000174 <__ctors_end>:
     174:	11 24       	eor	r1, r1
     176:	1f be       	out	0x3f, r1	; 63
     178:	cf ef       	ldi	r28, 0xFF	; 255
     17a:	d8 e0       	ldi	r29, 0x08	; 8
     17c:	de bf       	out	0x3e, r29	; 62
     17e:	cd bf       	out	0x3d, r28	; 61

00000180 <__do_copy_data>:
     180:	13 e0       	ldi	r17, 0x03	; 3
     182:	a0 e0       	ldi	r26, 0x00	; 0
     184:	b1 e0       	ldi	r27, 0x01	; 1
     186:	ea e0       	ldi	r30, 0x0A	; 10
     188:	f8 e1       	ldi	r31, 0x18	; 24
     18a:	02 c0       	rjmp	.+4      	; 0x190 <__do_copy_data+0x10>
     18c:	05 90       	lpm	r0, Z+
     18e:	0d 92       	st	X+, r0
     190:	a0 32       	cpi	r26, 0x20	; 32
     192:	b1 07       	cpc	r27, r17
     194:	d9 f7       	brne	.-10     	; 0x18c <__do_copy_data+0xc>

00000196 <__do_clear_bss>:
     196:	23 e0       	ldi	r18, 0x03	; 3
     198:	a0 e2       	ldi	r26, 0x20	; 32
     19a:	b3 e0       	ldi	r27, 0x03	; 3
     19c:	01 c0       	rjmp	.+2      	; 0x1a0 <.do_clear_bss_start>

0000019e <.do_clear_bss_loop>:
     19e:	1d 92       	st	X+, r1

000001a0 <.do_clear_bss_start>:
     1a0:	ad 32       	cpi	r26, 0x2D	; 45
     1a2:	b2 07       	cpc	r27, r18
     1a4:	e1 f7       	brne	.-8      	; 0x19e <.do_clear_bss_loop>
     1a6:	0e 94 8a 03 	call	0x714	; 0x714 <main>
     1aa:	0c 94 03 0c 	jmp	0x1806	; 0x1806 <_exit>

000001ae <__bad_interrupt>:
     1ae:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001b2 <i2c_init>:
			I2C_ErrorCode |= (1 << I2C_READNACK);
            return 0;
		}
	};
    return TWDR;
}
     1b2:	cf 93       	push	r28
     1b4:	df 93       	push	r29
     1b6:	cd b7       	in	r28, 0x3d	; 61
     1b8:	de b7       	in	r29, 0x3e	; 62
     1ba:	89 eb       	ldi	r24, 0xB9	; 185
     1bc:	90 e0       	ldi	r25, 0x00	; 0
     1be:	fc 01       	movw	r30, r24
     1c0:	10 82       	st	Z, r1
     1c2:	00 00       	nop
     1c4:	88 eb       	ldi	r24, 0xB8	; 184
     1c6:	90 e0       	ldi	r25, 0x00	; 0
     1c8:	28 e4       	ldi	r18, 0x48	; 72
     1ca:	fc 01       	movw	r30, r24
     1cc:	20 83       	st	Z, r18
     1ce:	8c eb       	ldi	r24, 0xBC	; 188
     1d0:	90 e0       	ldi	r25, 0x00	; 0
     1d2:	24 e0       	ldi	r18, 0x04	; 4
     1d4:	fc 01       	movw	r30, r24
     1d6:	20 83       	st	Z, r18
     1d8:	00 00       	nop
     1da:	df 91       	pop	r29
     1dc:	cf 91       	pop	r28
     1de:	08 95       	ret

000001e0 <i2c_start>:
     1e0:	cf 93       	push	r28
     1e2:	df 93       	push	r29
     1e4:	00 d0       	rcall	.+0      	; 0x1e6 <i2c_start+0x6>
     1e6:	1f 92       	push	r1
     1e8:	cd b7       	in	r28, 0x3d	; 61
     1ea:	de b7       	in	r29, 0x3e	; 62
     1ec:	8b 83       	std	Y+3, r24	; 0x03
     1ee:	8c eb       	ldi	r24, 0xBC	; 188
     1f0:	90 e0       	ldi	r25, 0x00	; 0
     1f2:	24 ea       	ldi	r18, 0xA4	; 164
     1f4:	fc 01       	movw	r30, r24
     1f6:	20 83       	st	Z, r18
     1f8:	80 e4       	ldi	r24, 0x40	; 64
     1fa:	91 e0       	ldi	r25, 0x01	; 1
     1fc:	9a 83       	std	Y+2, r25	; 0x02
     1fe:	89 83       	std	Y+1, r24	; 0x01
     200:	0f c0       	rjmp	.+30     	; 0x220 <i2c_start+0x40>
     202:	89 81       	ldd	r24, Y+1	; 0x01
     204:	9a 81       	ldd	r25, Y+2	; 0x02
     206:	01 97       	sbiw	r24, 0x01	; 1
     208:	9a 83       	std	Y+2, r25	; 0x02
     20a:	89 83       	std	Y+1, r24	; 0x01
     20c:	89 81       	ldd	r24, Y+1	; 0x01
     20e:	9a 81       	ldd	r25, Y+2	; 0x02
     210:	89 2b       	or	r24, r25
     212:	31 f4       	brne	.+12     	; 0x220 <i2c_start+0x40>
     214:	80 91 2a 03 	lds	r24, 0x032A	; 0x80032a <I2C_ErrorCode>
     218:	81 60       	ori	r24, 0x01	; 1
     21a:	80 93 2a 03 	sts	0x032A, r24	; 0x80032a <I2C_ErrorCode>
     21e:	32 c0       	rjmp	.+100    	; 0x284 <i2c_start+0xa4>
     220:	8c eb       	ldi	r24, 0xBC	; 188
     222:	90 e0       	ldi	r25, 0x00	; 0
     224:	fc 01       	movw	r30, r24
     226:	80 81       	ld	r24, Z
     228:	88 23       	and	r24, r24
     22a:	24 f0       	brlt	.+8      	; 0x234 <i2c_start+0x54>
     22c:	89 81       	ldd	r24, Y+1	; 0x01
     22e:	9a 81       	ldd	r25, Y+2	; 0x02
     230:	89 2b       	or	r24, r25
     232:	39 f7       	brne	.-50     	; 0x202 <i2c_start+0x22>
     234:	8b eb       	ldi	r24, 0xBB	; 187
     236:	90 e0       	ldi	r25, 0x00	; 0
     238:	2b 81       	ldd	r18, Y+3	; 0x03
     23a:	fc 01       	movw	r30, r24
     23c:	20 83       	st	Z, r18
     23e:	8c eb       	ldi	r24, 0xBC	; 188
     240:	90 e0       	ldi	r25, 0x00	; 0
     242:	24 e8       	ldi	r18, 0x84	; 132
     244:	fc 01       	movw	r30, r24
     246:	20 83       	st	Z, r18
     248:	80 e4       	ldi	r24, 0x40	; 64
     24a:	91 e0       	ldi	r25, 0x01	; 1
     24c:	9a 83       	std	Y+2, r25	; 0x02
     24e:	89 83       	std	Y+1, r24	; 0x01
     250:	0f c0       	rjmp	.+30     	; 0x270 <i2c_start+0x90>
     252:	89 81       	ldd	r24, Y+1	; 0x01
     254:	9a 81       	ldd	r25, Y+2	; 0x02
     256:	01 97       	sbiw	r24, 0x01	; 1
     258:	9a 83       	std	Y+2, r25	; 0x02
     25a:	89 83       	std	Y+1, r24	; 0x01
     25c:	89 81       	ldd	r24, Y+1	; 0x01
     25e:	9a 81       	ldd	r25, Y+2	; 0x02
     260:	89 2b       	or	r24, r25
     262:	31 f4       	brne	.+12     	; 0x270 <i2c_start+0x90>
     264:	80 91 2a 03 	lds	r24, 0x032A	; 0x80032a <I2C_ErrorCode>
     268:	82 60       	ori	r24, 0x02	; 2
     26a:	80 93 2a 03 	sts	0x032A, r24	; 0x80032a <I2C_ErrorCode>
     26e:	0a c0       	rjmp	.+20     	; 0x284 <i2c_start+0xa4>
     270:	8c eb       	ldi	r24, 0xBC	; 188
     272:	90 e0       	ldi	r25, 0x00	; 0
     274:	fc 01       	movw	r30, r24
     276:	80 81       	ld	r24, Z
     278:	88 23       	and	r24, r24
     27a:	24 f0       	brlt	.+8      	; 0x284 <i2c_start+0xa4>
     27c:	89 81       	ldd	r24, Y+1	; 0x01
     27e:	9a 81       	ldd	r25, Y+2	; 0x02
     280:	89 2b       	or	r24, r25
     282:	39 f7       	brne	.-50     	; 0x252 <i2c_start+0x72>
     284:	0f 90       	pop	r0
     286:	0f 90       	pop	r0
     288:	0f 90       	pop	r0
     28a:	df 91       	pop	r29
     28c:	cf 91       	pop	r28
     28e:	08 95       	ret

00000290 <i2c_stop>:
     290:	cf 93       	push	r28
     292:	df 93       	push	r29
     294:	cd b7       	in	r28, 0x3d	; 61
     296:	de b7       	in	r29, 0x3e	; 62
     298:	8c eb       	ldi	r24, 0xBC	; 188
     29a:	90 e0       	ldi	r25, 0x00	; 0
     29c:	24 e9       	ldi	r18, 0x94	; 148
     29e:	fc 01       	movw	r30, r24
     2a0:	20 83       	st	Z, r18
     2a2:	00 00       	nop
     2a4:	df 91       	pop	r29
     2a6:	cf 91       	pop	r28
     2a8:	08 95       	ret

000002aa <i2c_byte>:
     2aa:	cf 93       	push	r28
     2ac:	df 93       	push	r29
     2ae:	00 d0       	rcall	.+0      	; 0x2b0 <i2c_byte+0x6>
     2b0:	1f 92       	push	r1
     2b2:	cd b7       	in	r28, 0x3d	; 61
     2b4:	de b7       	in	r29, 0x3e	; 62
     2b6:	8b 83       	std	Y+3, r24	; 0x03
     2b8:	8b eb       	ldi	r24, 0xBB	; 187
     2ba:	90 e0       	ldi	r25, 0x00	; 0
     2bc:	2b 81       	ldd	r18, Y+3	; 0x03
     2be:	fc 01       	movw	r30, r24
     2c0:	20 83       	st	Z, r18
     2c2:	8c eb       	ldi	r24, 0xBC	; 188
     2c4:	90 e0       	ldi	r25, 0x00	; 0
     2c6:	24 e8       	ldi	r18, 0x84	; 132
     2c8:	fc 01       	movw	r30, r24
     2ca:	20 83       	st	Z, r18
     2cc:	80 e4       	ldi	r24, 0x40	; 64
     2ce:	91 e0       	ldi	r25, 0x01	; 1
     2d0:	9a 83       	std	Y+2, r25	; 0x02
     2d2:	89 83       	std	Y+1, r24	; 0x01
     2d4:	0f c0       	rjmp	.+30     	; 0x2f4 <i2c_byte+0x4a>
     2d6:	89 81       	ldd	r24, Y+1	; 0x01
     2d8:	9a 81       	ldd	r25, Y+2	; 0x02
     2da:	01 97       	sbiw	r24, 0x01	; 1
     2dc:	9a 83       	std	Y+2, r25	; 0x02
     2de:	89 83       	std	Y+1, r24	; 0x01
     2e0:	89 81       	ldd	r24, Y+1	; 0x01
     2e2:	9a 81       	ldd	r25, Y+2	; 0x02
     2e4:	89 2b       	or	r24, r25
     2e6:	31 f4       	brne	.+12     	; 0x2f4 <i2c_byte+0x4a>
     2e8:	80 91 2a 03 	lds	r24, 0x032A	; 0x80032a <I2C_ErrorCode>
     2ec:	84 60       	ori	r24, 0x04	; 4
     2ee:	80 93 2a 03 	sts	0x032A, r24	; 0x80032a <I2C_ErrorCode>
     2f2:	0a c0       	rjmp	.+20     	; 0x308 <i2c_byte+0x5e>
     2f4:	8c eb       	ldi	r24, 0xBC	; 188
     2f6:	90 e0       	ldi	r25, 0x00	; 0
     2f8:	fc 01       	movw	r30, r24
     2fa:	80 81       	ld	r24, Z
     2fc:	88 23       	and	r24, r24
     2fe:	24 f0       	brlt	.+8      	; 0x308 <i2c_byte+0x5e>
     300:	89 81       	ldd	r24, Y+1	; 0x01
     302:	9a 81       	ldd	r25, Y+2	; 0x02
     304:	89 2b       	or	r24, r25
     306:	39 f7       	brne	.-50     	; 0x2d6 <i2c_byte+0x2c>
     308:	0f 90       	pop	r0
     30a:	0f 90       	pop	r0
     30c:	0f 90       	pop	r0
     30e:	df 91       	pop	r29
     310:	cf 91       	pop	r28
     312:	08 95       	ret

00000314 <i2c_tx_start>:

//Modified section below
void i2c_tx_start(void){
     314:	cf 93       	push	r28
     316:	df 93       	push	r29
     318:	cd b7       	in	r28, 0x3d	; 61
     31a:	de b7       	in	r29, 0x3e	; 62
	i2c_init();
     31c:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <i2c_init>
}
     320:	00 00       	nop
     322:	df 91       	pop	r29
     324:	cf 91       	pop	r28
     326:	08 95       	ret

00000328 <i2c_tx_address>:
void i2c_tx_address(uint8_t addr){
     328:	cf 93       	push	r28
     32a:	df 93       	push	r29
     32c:	1f 92       	push	r1
     32e:	cd b7       	in	r28, 0x3d	; 61
     330:	de b7       	in	r29, 0x3e	; 62
     332:	89 83       	std	Y+1, r24	; 0x01
	i2c_start(addr);
     334:	89 81       	ldd	r24, Y+1	; 0x01
     336:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <i2c_start>
}
     33a:	00 00       	nop
     33c:	0f 90       	pop	r0
     33e:	df 91       	pop	r29
     340:	cf 91       	pop	r28
     342:	08 95       	ret

00000344 <i2c_tx_byte>:
void i2c_tx_byte(uint8_t ch){
     344:	cf 93       	push	r28
     346:	df 93       	push	r29
     348:	1f 92       	push	r1
     34a:	cd b7       	in	r28, 0x3d	; 61
     34c:	de b7       	in	r29, 0x3e	; 62
     34e:	89 83       	std	Y+1, r24	; 0x01
	i2c_byte(ch);
     350:	89 81       	ldd	r24, Y+1	; 0x01
     352:	0e 94 55 01 	call	0x2aa	; 0x2aa <i2c_byte>
}
     356:	00 00       	nop
     358:	0f 90       	pop	r0
     35a:	df 91       	pop	r29
     35c:	cf 91       	pop	r28
     35e:	08 95       	ret

00000360 <i2c_tx_stop>:
void i2c_tx_stop(void){
     360:	cf 93       	push	r28
     362:	df 93       	push	r29
     364:	cd b7       	in	r28, 0x3d	; 61
     366:	de b7       	in	r29, 0x3e	; 62
	i2c_stop();
     368:	0e 94 48 01 	call	0x290	; 0x290 <i2c_stop>
}
     36c:	00 00       	nop
     36e:	df 91       	pop	r29
     370:	cf 91       	pop	r28
     372:	08 95       	ret

00000374 <__vector_16>:
const double dc_adj=0.1; //duty cycle adjusting parameter
const int n=1; //speed controller for motor when the motor runs too fast, use 2 to reduce the speed



ISR(TIMER0_COMPA_vect){ //ISR for when timer0 overflows
     374:	1f 92       	push	r1
     376:	0f 92       	push	r0
     378:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     37c:	0f 92       	push	r0
     37e:	11 24       	eor	r1, r1
     380:	cf 92       	push	r12
     382:	df 92       	push	r13
     384:	ef 92       	push	r14
     386:	ff 92       	push	r15
     388:	2f 93       	push	r18
     38a:	3f 93       	push	r19
     38c:	4f 93       	push	r20
     38e:	5f 93       	push	r21
     390:	6f 93       	push	r22
     392:	7f 93       	push	r23
     394:	8f 93       	push	r24
     396:	9f 93       	push	r25
     398:	af 93       	push	r26
     39a:	bf 93       	push	r27
     39c:	ef 93       	push	r30
     39e:	ff 93       	push	r31
     3a0:	cf 93       	push	r28
     3a2:	df 93       	push	r29
     3a4:	00 d0       	rcall	.+0      	; 0x3a6 <__vector_16+0x32>
     3a6:	cd b7       	in	r28, 0x3d	; 61
     3a8:	de b7       	in	r29, 0x3e	; 62
	overflow_counter++; //increase counter variable
     3aa:	80 91 24 03 	lds	r24, 0x0324	; 0x800324 <overflow_counter>
     3ae:	90 91 25 03 	lds	r25, 0x0325	; 0x800325 <overflow_counter+0x1>
     3b2:	01 96       	adiw	r24, 0x01	; 1
     3b4:	90 93 25 03 	sts	0x0325, r25	; 0x800325 <overflow_counter+0x1>
     3b8:	80 93 24 03 	sts	0x0324, r24	; 0x800324 <overflow_counter>
	int k = 2; //number of sensor reading per 1 revolution
     3bc:	82 e0       	ldi	r24, 0x02	; 2
     3be:	90 e0       	ldi	r25, 0x00	; 0
     3c0:	9a 83       	std	Y+2, r25	; 0x02
     3c2:	89 83       	std	Y+1, r24	; 0x01
	if(overflow_counter >= 200){ //when counter equals 200
     3c4:	80 91 24 03 	lds	r24, 0x0324	; 0x800324 <overflow_counter>
     3c8:	90 91 25 03 	lds	r25, 0x0325	; 0x800325 <overflow_counter+0x1>
     3cc:	88 3c       	cpi	r24, 0xC8	; 200
     3ce:	91 05       	cpc	r25, r1
     3d0:	0c f4       	brge	.+2      	; 0x3d4 <__vector_16+0x60>
     3d2:	4a c0       	rjmp	.+148    	; 0x468 <__EEPROM_REGION_LENGTH__+0x68>
		RPM = ((sensor_counter/((256*0.0625*0.000001*1024)*200))*60)/k;
     3d4:	80 91 26 03 	lds	r24, 0x0326	; 0x800326 <sensor_counter>
     3d8:	90 91 27 03 	lds	r25, 0x0327	; 0x800327 <sensor_counter+0x1>
     3dc:	09 2e       	mov	r0, r25
     3de:	00 0c       	add	r0, r0
     3e0:	aa 0b       	sbc	r26, r26
     3e2:	bb 0b       	sbc	r27, r27
     3e4:	bc 01       	movw	r22, r24
     3e6:	cd 01       	movw	r24, r26
     3e8:	0e 94 b9 0a 	call	0x1572	; 0x1572 <__floatsisf>
     3ec:	dc 01       	movw	r26, r24
     3ee:	cb 01       	movw	r24, r22
     3f0:	27 e1       	ldi	r18, 0x17	; 23
     3f2:	37 eb       	ldi	r19, 0xB7	; 183
     3f4:	41 e5       	ldi	r20, 0x51	; 81
     3f6:	50 e4       	ldi	r21, 0x40	; 64
     3f8:	bc 01       	movw	r22, r24
     3fa:	cd 01       	movw	r24, r26
     3fc:	0e 94 0f 0a 	call	0x141e	; 0x141e <__divsf3>
     400:	dc 01       	movw	r26, r24
     402:	cb 01       	movw	r24, r22
     404:	20 e0       	ldi	r18, 0x00	; 0
     406:	30 e0       	ldi	r19, 0x00	; 0
     408:	40 e7       	ldi	r20, 0x70	; 112
     40a:	52 e4       	ldi	r21, 0x42	; 66
     40c:	bc 01       	movw	r22, r24
     40e:	cd 01       	movw	r24, r26
     410:	0e 94 6e 0b 	call	0x16dc	; 0x16dc <__mulsf3>
     414:	dc 01       	movw	r26, r24
     416:	cb 01       	movw	r24, r22
     418:	6c 01       	movw	r12, r24
     41a:	7d 01       	movw	r14, r26
     41c:	89 81       	ldd	r24, Y+1	; 0x01
     41e:	9a 81       	ldd	r25, Y+2	; 0x02
     420:	09 2e       	mov	r0, r25
     422:	00 0c       	add	r0, r0
     424:	aa 0b       	sbc	r26, r26
     426:	bb 0b       	sbc	r27, r27
     428:	bc 01       	movw	r22, r24
     42a:	cd 01       	movw	r24, r26
     42c:	0e 94 b9 0a 	call	0x1572	; 0x1572 <__floatsisf>
     430:	dc 01       	movw	r26, r24
     432:	cb 01       	movw	r24, r22
     434:	9c 01       	movw	r18, r24
     436:	ad 01       	movw	r20, r26
     438:	c7 01       	movw	r24, r14
     43a:	b6 01       	movw	r22, r12
     43c:	0e 94 0f 0a 	call	0x141e	; 0x141e <__divsf3>
     440:	dc 01       	movw	r26, r24
     442:	cb 01       	movw	r24, r22
     444:	bc 01       	movw	r22, r24
     446:	cd 01       	movw	r24, r26
     448:	0e 94 81 0a 	call	0x1502	; 0x1502 <__fixsfsi>
     44c:	dc 01       	movw	r26, r24
     44e:	cb 01       	movw	r24, r22
     450:	90 93 29 03 	sts	0x0329, r25	; 0x800329 <RPM+0x1>
     454:	80 93 28 03 	sts	0x0328, r24	; 0x800328 <RPM>
		sensor_counter = 0; //reset trigger_count variable
     458:	10 92 27 03 	sts	0x0327, r1	; 0x800327 <sensor_counter+0x1>
     45c:	10 92 26 03 	sts	0x0326, r1	; 0x800326 <sensor_counter>
		overflow_counter = 0;
     460:	10 92 25 03 	sts	0x0325, r1	; 0x800325 <overflow_counter+0x1>
     464:	10 92 24 03 	sts	0x0324, r1	; 0x800324 <overflow_counter>
    }
}
     468:	00 00       	nop
     46a:	0f 90       	pop	r0
     46c:	0f 90       	pop	r0
     46e:	df 91       	pop	r29
     470:	cf 91       	pop	r28
     472:	ff 91       	pop	r31
     474:	ef 91       	pop	r30
     476:	bf 91       	pop	r27
     478:	af 91       	pop	r26
     47a:	9f 91       	pop	r25
     47c:	8f 91       	pop	r24
     47e:	7f 91       	pop	r23
     480:	6f 91       	pop	r22
     482:	5f 91       	pop	r21
     484:	4f 91       	pop	r20
     486:	3f 91       	pop	r19
     488:	2f 91       	pop	r18
     48a:	ff 90       	pop	r15
     48c:	ef 90       	pop	r14
     48e:	df 90       	pop	r13
     490:	cf 90       	pop	r12
     492:	0f 90       	pop	r0
     494:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     498:	0f 90       	pop	r0
     49a:	1f 90       	pop	r1
     49c:	18 95       	reti

0000049e <__vector_1>:
ISR(INT0_vect, ISR_BLOCK){
     49e:	1f 92       	push	r1
     4a0:	0f 92       	push	r0
     4a2:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     4a6:	0f 92       	push	r0
     4a8:	11 24       	eor	r1, r1
     4aa:	8f 93       	push	r24
     4ac:	9f 93       	push	r25
     4ae:	cf 93       	push	r28
     4b0:	df 93       	push	r29
     4b2:	cd b7       	in	r28, 0x3d	; 61
     4b4:	de b7       	in	r29, 0x3e	; 62
	sensor_counter++;
     4b6:	80 91 26 03 	lds	r24, 0x0326	; 0x800326 <sensor_counter>
     4ba:	90 91 27 03 	lds	r25, 0x0327	; 0x800327 <sensor_counter+0x1>
     4be:	01 96       	adiw	r24, 0x01	; 1
     4c0:	90 93 27 03 	sts	0x0327, r25	; 0x800327 <sensor_counter+0x1>
     4c4:	80 93 26 03 	sts	0x0326, r24	; 0x800326 <sensor_counter>
}
     4c8:	00 00       	nop
     4ca:	df 91       	pop	r29
     4cc:	cf 91       	pop	r28
     4ce:	9f 91       	pop	r25
     4d0:	8f 91       	pop	r24
     4d2:	0f 90       	pop	r0
     4d4:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     4d8:	0f 90       	pop	r0
     4da:	1f 90       	pop	r1
     4dc:	18 95       	reti

000004de <__vector_13>:
ISR(TIMER1_COMPA_vect, ISR_BLOCK){ //ISR for when timer1A interrupts
     4de:	1f 92       	push	r1
     4e0:	0f 92       	push	r0
     4e2:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     4e6:	0f 92       	push	r0
     4e8:	11 24       	eor	r1, r1
     4ea:	2f 93       	push	r18
     4ec:	3f 93       	push	r19
     4ee:	8f 93       	push	r24
     4f0:	9f 93       	push	r25
     4f2:	ef 93       	push	r30
     4f4:	ff 93       	push	r31
     4f6:	cf 93       	push	r28
     4f8:	df 93       	push	r29
     4fa:	cd b7       	in	r28, 0x3d	; 61
     4fc:	de b7       	in	r29, 0x3e	; 62
	PORTE &= ~(1<<DCmotor); //turn off PE2 pin
     4fe:	8e e2       	ldi	r24, 0x2E	; 46
     500:	90 e0       	ldi	r25, 0x00	; 0
     502:	2e e2       	ldi	r18, 0x2E	; 46
     504:	30 e0       	ldi	r19, 0x00	; 0
     506:	f9 01       	movw	r30, r18
     508:	20 81       	ld	r18, Z
     50a:	2b 7f       	andi	r18, 0xFB	; 251
     50c:	fc 01       	movw	r30, r24
     50e:	20 83       	st	Z, r18
}
     510:	00 00       	nop
     512:	df 91       	pop	r29
     514:	cf 91       	pop	r28
     516:	ff 91       	pop	r31
     518:	ef 91       	pop	r30
     51a:	9f 91       	pop	r25
     51c:	8f 91       	pop	r24
     51e:	3f 91       	pop	r19
     520:	2f 91       	pop	r18
     522:	0f 90       	pop	r0
     524:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     528:	0f 90       	pop	r0
     52a:	1f 90       	pop	r1
     52c:	18 95       	reti

0000052e <__vector_14>:
ISR(TIMER1_COMPB_vect, ISR_BLOCK){ //ISR for when timer1B interrupts
     52e:	1f 92       	push	r1
     530:	0f 92       	push	r0
     532:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     536:	0f 92       	push	r0
     538:	11 24       	eor	r1, r1
     53a:	2f 93       	push	r18
     53c:	3f 93       	push	r19
     53e:	8f 93       	push	r24
     540:	9f 93       	push	r25
     542:	ef 93       	push	r30
     544:	ff 93       	push	r31
     546:	cf 93       	push	r28
     548:	df 93       	push	r29
     54a:	cd b7       	in	r28, 0x3d	; 61
     54c:	de b7       	in	r29, 0x3e	; 62
	PORTE |= (1<<DCmotor); //turn on PE2 pin
     54e:	8e e2       	ldi	r24, 0x2E	; 46
     550:	90 e0       	ldi	r25, 0x00	; 0
     552:	2e e2       	ldi	r18, 0x2E	; 46
     554:	30 e0       	ldi	r19, 0x00	; 0
     556:	f9 01       	movw	r30, r18
     558:	20 81       	ld	r18, Z
     55a:	24 60       	ori	r18, 0x04	; 4
     55c:	fc 01       	movw	r30, r24
     55e:	20 83       	st	Z, r18
}
     560:	00 00       	nop
     562:	df 91       	pop	r29
     564:	cf 91       	pop	r28
     566:	ff 91       	pop	r31
     568:	ef 91       	pop	r30
     56a:	9f 91       	pop	r25
     56c:	8f 91       	pop	r24
     56e:	3f 91       	pop	r19
     570:	2f 91       	pop	r18
     572:	0f 90       	pop	r0
     574:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     578:	0f 90       	pop	r0
     57a:	1f 90       	pop	r1
     57c:	18 95       	reti

0000057e <OLED_display>:
void OLED_display(){ //this will update the OLED display with the most current info
     57e:	cf 93       	push	r28
     580:	df 93       	push	r29
     582:	cd b7       	in	r28, 0x3d	; 61
     584:	de b7       	in	r29, 0x3e	; 62
	OLED_SetCursor(0, 0);
     586:	60 e0       	ldi	r22, 0x00	; 0
     588:	80 e0       	ldi	r24, 0x00	; 0
     58a:	0e 94 2e 09 	call	0x125c	; 0x125c <OLED_SetCursor>
	OLED_Printf("Colin Bakum");
     58e:	80 e0       	ldi	r24, 0x00	; 0
     590:	91 e0       	ldi	r25, 0x01	; 1
     592:	89 2f       	mov	r24, r25
     594:	8f 93       	push	r24
     596:	80 e0       	ldi	r24, 0x00	; 0
     598:	91 e0       	ldi	r25, 0x01	; 1
     59a:	8f 93       	push	r24
     59c:	0e 94 15 07 	call	0xe2a	; 0xe2a <OLED_Printf>
     5a0:	0f 90       	pop	r0
     5a2:	0f 90       	pop	r0
	OLED_SetCursor(1, 0);
     5a4:	60 e0       	ldi	r22, 0x00	; 0
     5a6:	81 e0       	ldi	r24, 0x01	; 1
     5a8:	0e 94 2e 09 	call	0x125c	; 0x125c <OLED_SetCursor>
	OLED_Printf("Motor Control:");
     5ac:	8c e0       	ldi	r24, 0x0C	; 12
     5ae:	91 e0       	ldi	r25, 0x01	; 1
     5b0:	89 2f       	mov	r24, r25
     5b2:	8f 93       	push	r24
     5b4:	8c e0       	ldi	r24, 0x0C	; 12
     5b6:	91 e0       	ldi	r25, 0x01	; 1
     5b8:	8f 93       	push	r24
     5ba:	0e 94 15 07 	call	0xe2a	; 0xe2a <OLED_Printf>
     5be:	0f 90       	pop	r0
     5c0:	0f 90       	pop	r0
	OLED_SetCursor(3, 0);
     5c2:	60 e0       	ldi	r22, 0x00	; 0
     5c4:	83 e0       	ldi	r24, 0x03	; 3
     5c6:	0e 94 2e 09 	call	0x125c	; 0x125c <OLED_SetCursor>
	OLED_Printf("Mode:        ");
     5ca:	8b e1       	ldi	r24, 0x1B	; 27
     5cc:	91 e0       	ldi	r25, 0x01	; 1
     5ce:	89 2f       	mov	r24, r25
     5d0:	8f 93       	push	r24
     5d2:	8b e1       	ldi	r24, 0x1B	; 27
     5d4:	91 e0       	ldi	r25, 0x01	; 1
     5d6:	8f 93       	push	r24
     5d8:	0e 94 15 07 	call	0xe2a	; 0xe2a <OLED_Printf>
     5dc:	0f 90       	pop	r0
     5de:	0f 90       	pop	r0
	OLED_DisplayNumber(C_DECIMAL_U8,count_int,2);
     5e0:	80 91 22 03 	lds	r24, 0x0322	; 0x800322 <count_int>
     5e4:	90 91 23 03 	lds	r25, 0x0323	; 0x800323 <count_int+0x1>
     5e8:	09 2e       	mov	r0, r25
     5ea:	00 0c       	add	r0, r0
     5ec:	aa 0b       	sbc	r26, r26
     5ee:	bb 0b       	sbc	r27, r27
     5f0:	22 e0       	ldi	r18, 0x02	; 2
     5f2:	ac 01       	movw	r20, r24
     5f4:	bd 01       	movw	r22, r26
     5f6:	8a e0       	ldi	r24, 0x0A	; 10
     5f8:	0e 94 be 05 	call	0xb7c	; 0xb7c <OLED_DisplayNumber>
	OLED_SetCursor(4, 0);
     5fc:	60 e0       	ldi	r22, 0x00	; 0
     5fe:	84 e0       	ldi	r24, 0x04	; 4
     600:	0e 94 2e 09 	call	0x125c	; 0x125c <OLED_SetCursor>
	OLED_Printf("Duty Cycle:  ");
     604:	89 e2       	ldi	r24, 0x29	; 41
     606:	91 e0       	ldi	r25, 0x01	; 1
     608:	89 2f       	mov	r24, r25
     60a:	8f 93       	push	r24
     60c:	89 e2       	ldi	r24, 0x29	; 41
     60e:	91 e0       	ldi	r25, 0x01	; 1
     610:	8f 93       	push	r24
     612:	0e 94 15 07 	call	0xe2a	; 0xe2a <OLED_Printf>
     616:	0f 90       	pop	r0
     618:	0f 90       	pop	r0
	OLED_DisplayNumber(C_DECIMAL_U8,dutyCycle,3);
     61a:	80 91 20 03 	lds	r24, 0x0320	; 0x800320 <__data_end>
     61e:	88 2f       	mov	r24, r24
     620:	90 e0       	ldi	r25, 0x00	; 0
     622:	a0 e0       	ldi	r26, 0x00	; 0
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	23 e0       	ldi	r18, 0x03	; 3
     628:	ac 01       	movw	r20, r24
     62a:	bd 01       	movw	r22, r26
     62c:	8a e0       	ldi	r24, 0x0A	; 10
     62e:	0e 94 be 05 	call	0xb7c	; 0xb7c <OLED_DisplayNumber>
	OLED_SetCursor(5, 0);
     632:	60 e0       	ldi	r22, 0x00	; 0
     634:	85 e0       	ldi	r24, 0x05	; 5
     636:	0e 94 2e 09 	call	0x125c	; 0x125c <OLED_SetCursor>
	OLED_Printf("RPM:         ");
     63a:	87 e3       	ldi	r24, 0x37	; 55
     63c:	91 e0       	ldi	r25, 0x01	; 1
     63e:	89 2f       	mov	r24, r25
     640:	8f 93       	push	r24
     642:	87 e3       	ldi	r24, 0x37	; 55
     644:	91 e0       	ldi	r25, 0x01	; 1
     646:	8f 93       	push	r24
     648:	0e 94 15 07 	call	0xe2a	; 0xe2a <OLED_Printf>
     64c:	0f 90       	pop	r0
     64e:	0f 90       	pop	r0
	OLED_DisplayNumber(C_DECIMAL_U8,RPM,5);
     650:	80 91 28 03 	lds	r24, 0x0328	; 0x800328 <RPM>
     654:	90 91 29 03 	lds	r25, 0x0329	; 0x800329 <RPM+0x1>
     658:	09 2e       	mov	r0, r25
     65a:	00 0c       	add	r0, r0
     65c:	aa 0b       	sbc	r26, r26
     65e:	bb 0b       	sbc	r27, r27
     660:	25 e0       	ldi	r18, 0x05	; 5
     662:	ac 01       	movw	r20, r24
     664:	bd 01       	movw	r22, r26
     666:	8a e0       	ldi	r24, 0x0A	; 10
     668:	0e 94 be 05 	call	0xb7c	; 0xb7c <OLED_DisplayNumber>
	}
     66c:	00 00       	nop
     66e:	df 91       	pop	r29
     670:	cf 91       	pop	r28
     672:	08 95       	ret

00000674 <checkJoystick>:
	
void checkJoystick(){
     674:	cf 93       	push	r28
     676:	df 93       	push	r29
     678:	1f 92       	push	r1
     67a:	cd b7       	in	r28, 0x3d	; 61
     67c:	de b7       	in	r29, 0x3e	; 62
	char joystick = (0b11110000&PINB); //get high 4 bits of PORTB (contains up and down button)
     67e:	83 e2       	ldi	r24, 0x23	; 35
     680:	90 e0       	ldi	r25, 0x00	; 0
     682:	fc 01       	movw	r30, r24
     684:	80 81       	ld	r24, Z
     686:	80 7f       	andi	r24, 0xF0	; 240
     688:	89 83       	std	Y+1, r24	; 0x01
	joystick = joystick^0xf0; //invert value of of up and down button (Pullup resistors pull pins high)
     68a:	99 81       	ldd	r25, Y+1	; 0x01
     68c:	80 ef       	ldi	r24, 0xF0	; 240
     68e:	89 27       	eor	r24, r25
     690:	89 83       	std	Y+1, r24	; 0x01
	if(lastInput != joystick){ //check if PORTB has been updated
     692:	90 91 21 03 	lds	r25, 0x0321	; 0x800321 <lastInput>
     696:	89 81       	ldd	r24, Y+1	; 0x01
     698:	98 17       	cp	r25, r24
     69a:	b9 f1       	breq	.+110    	; 0x70a <checkJoystick+0x96>
		if(joystick&(1<<up_count)){ //check for up button being pressed
     69c:	89 81       	ldd	r24, Y+1	; 0x01
     69e:	88 2f       	mov	r24, r24
     6a0:	90 e0       	ldi	r25, 0x00	; 0
     6a2:	80 72       	andi	r24, 0x20	; 32
     6a4:	99 27       	eor	r25, r25
     6a6:	89 2b       	or	r24, r25
     6a8:	79 f0       	breq	.+30     	; 0x6c8 <checkJoystick+0x54>
			if(count_int < 10) //if the PWM value is less than 10,
     6aa:	80 91 22 03 	lds	r24, 0x0322	; 0x800322 <count_int>
     6ae:	90 91 23 03 	lds	r25, 0x0323	; 0x800323 <count_int+0x1>
     6b2:	0a 97       	sbiw	r24, 0x0a	; 10
     6b4:	4c f4       	brge	.+18     	; 0x6c8 <checkJoystick+0x54>
			count_int++; //YES: increment it
     6b6:	80 91 22 03 	lds	r24, 0x0322	; 0x800322 <count_int>
     6ba:	90 91 23 03 	lds	r25, 0x0323	; 0x800323 <count_int+0x1>
     6be:	01 96       	adiw	r24, 0x01	; 1
     6c0:	90 93 23 03 	sts	0x0323, r25	; 0x800323 <count_int+0x1>
     6c4:	80 93 22 03 	sts	0x0322, r24	; 0x800322 <count_int>
		}
		if(joystick&(1<<down_count)){ //check for down button being pressed
     6c8:	89 81       	ldd	r24, Y+1	; 0x01
     6ca:	88 23       	and	r24, r24
     6cc:	84 f4       	brge	.+32     	; 0x6ee <checkJoystick+0x7a>
			if(count_int > 0) //if the PWM value is more than 0,
     6ce:	80 91 22 03 	lds	r24, 0x0322	; 0x800322 <count_int>
     6d2:	90 91 23 03 	lds	r25, 0x0323	; 0x800323 <count_int+0x1>
     6d6:	18 16       	cp	r1, r24
     6d8:	19 06       	cpc	r1, r25
     6da:	4c f4       	brge	.+18     	; 0x6ee <checkJoystick+0x7a>
			count_int--; //NO: decrement it
     6dc:	80 91 22 03 	lds	r24, 0x0322	; 0x800322 <count_int>
     6e0:	90 91 23 03 	lds	r25, 0x0323	; 0x800323 <count_int+0x1>
     6e4:	01 97       	sbiw	r24, 0x01	; 1
     6e6:	90 93 23 03 	sts	0x0323, r25	; 0x800323 <count_int+0x1>
     6ea:	80 93 22 03 	sts	0x0322, r24	; 0x800322 <count_int>
		}
		dutyCycle = count_int*10;//update dutyCycle variable for OLED display
     6ee:	80 91 22 03 	lds	r24, 0x0322	; 0x800322 <count_int>
     6f2:	90 91 23 03 	lds	r25, 0x0323	; 0x800323 <count_int+0x1>
     6f6:	88 0f       	add	r24, r24
     6f8:	98 2f       	mov	r25, r24
     6fa:	99 0f       	add	r25, r25
     6fc:	99 0f       	add	r25, r25
     6fe:	89 0f       	add	r24, r25
     700:	80 93 20 03 	sts	0x0320, r24	; 0x800320 <__data_end>
		lastInput = joystick; //keep the latest PORTB input
     704:	89 81       	ldd	r24, Y+1	; 0x01
     706:	80 93 21 03 	sts	0x0321, r24	; 0x800321 <lastInput>
	}
}
     70a:	00 00       	nop
     70c:	0f 90       	pop	r0
     70e:	df 91       	pop	r29
     710:	cf 91       	pop	r28
     712:	08 95       	ret

00000714 <main>:

int main(void){
     714:	cf 92       	push	r12
     716:	df 92       	push	r13
     718:	ef 92       	push	r14
     71a:	ff 92       	push	r15
     71c:	0f 93       	push	r16
     71e:	1f 93       	push	r17
     720:	cf 93       	push	r28
     722:	df 93       	push	r29
     724:	cd b7       	in	r28, 0x3d	; 61
     726:	de b7       	in	r29, 0x3e	; 62
     728:	2e 97       	sbiw	r28, 0x0e	; 14
     72a:	0f b6       	in	r0, 0x3f	; 63
     72c:	f8 94       	cli
     72e:	de bf       	out	0x3e, r29	; 62
     730:	0f be       	out	0x3f, r0	; 63
     732:	cd bf       	out	0x3d, r28	; 61
	
	OLED_Init();
     734:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <OLED_Init>
     738:	80 e0       	ldi	r24, 0x00	; 0
     73a:	90 e0       	ldi	r25, 0x00	; 0
     73c:	a0 ea       	ldi	r26, 0xA0	; 160
     73e:	b0 e4       	ldi	r27, 0x40	; 64
     740:	89 83       	std	Y+1, r24	; 0x01
     742:	9a 83       	std	Y+2, r25	; 0x02
     744:	ab 83       	std	Y+3, r26	; 0x03
     746:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     748:	20 e0       	ldi	r18, 0x00	; 0
     74a:	30 e0       	ldi	r19, 0x00	; 0
     74c:	4a e7       	ldi	r20, 0x7A	; 122
     74e:	55 e4       	ldi	r21, 0x45	; 69
     750:	69 81       	ldd	r22, Y+1	; 0x01
     752:	7a 81       	ldd	r23, Y+2	; 0x02
     754:	8b 81       	ldd	r24, Y+3	; 0x03
     756:	9c 81       	ldd	r25, Y+4	; 0x04
     758:	0e 94 6e 0b 	call	0x16dc	; 0x16dc <__mulsf3>
     75c:	dc 01       	movw	r26, r24
     75e:	cb 01       	movw	r24, r22
     760:	8d 83       	std	Y+5, r24	; 0x05
     762:	9e 83       	std	Y+6, r25	; 0x06
     764:	af 83       	std	Y+7, r26	; 0x07
     766:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     768:	20 e0       	ldi	r18, 0x00	; 0
     76a:	30 e0       	ldi	r19, 0x00	; 0
     76c:	40 e8       	ldi	r20, 0x80	; 128
     76e:	5f e3       	ldi	r21, 0x3F	; 63
     770:	6d 81       	ldd	r22, Y+5	; 0x05
     772:	7e 81       	ldd	r23, Y+6	; 0x06
     774:	8f 81       	ldd	r24, Y+7	; 0x07
     776:	98 85       	ldd	r25, Y+8	; 0x08
     778:	0e 94 0a 0a 	call	0x1414	; 0x1414 <__cmpsf2>
     77c:	88 23       	and	r24, r24
     77e:	2c f4       	brge	.+10     	; 0x78a <main+0x76>
		__ticks = 1;
     780:	81 e0       	ldi	r24, 0x01	; 1
     782:	90 e0       	ldi	r25, 0x00	; 0
     784:	9a 87       	std	Y+10, r25	; 0x0a
     786:	89 87       	std	Y+9, r24	; 0x09
     788:	3f c0       	rjmp	.+126    	; 0x808 <__DATA_REGION_LENGTH__+0x8>
	else if (__tmp > 65535)
     78a:	20 e0       	ldi	r18, 0x00	; 0
     78c:	3f ef       	ldi	r19, 0xFF	; 255
     78e:	4f e7       	ldi	r20, 0x7F	; 127
     790:	57 e4       	ldi	r21, 0x47	; 71
     792:	6d 81       	ldd	r22, Y+5	; 0x05
     794:	7e 81       	ldd	r23, Y+6	; 0x06
     796:	8f 81       	ldd	r24, Y+7	; 0x07
     798:	98 85       	ldd	r25, Y+8	; 0x08
     79a:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <__gesf2>
     79e:	18 16       	cp	r1, r24
     7a0:	4c f5       	brge	.+82     	; 0x7f4 <main+0xe0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     7a2:	20 e0       	ldi	r18, 0x00	; 0
     7a4:	30 e0       	ldi	r19, 0x00	; 0
     7a6:	40 e2       	ldi	r20, 0x20	; 32
     7a8:	51 e4       	ldi	r21, 0x41	; 65
     7aa:	69 81       	ldd	r22, Y+1	; 0x01
     7ac:	7a 81       	ldd	r23, Y+2	; 0x02
     7ae:	8b 81       	ldd	r24, Y+3	; 0x03
     7b0:	9c 81       	ldd	r25, Y+4	; 0x04
     7b2:	0e 94 6e 0b 	call	0x16dc	; 0x16dc <__mulsf3>
     7b6:	dc 01       	movw	r26, r24
     7b8:	cb 01       	movw	r24, r22
     7ba:	bc 01       	movw	r22, r24
     7bc:	cd 01       	movw	r24, r26
     7be:	0e 94 88 0a 	call	0x1510	; 0x1510 <__fixunssfsi>
     7c2:	dc 01       	movw	r26, r24
     7c4:	cb 01       	movw	r24, r22
     7c6:	9a 87       	std	Y+10, r25	; 0x0a
     7c8:	89 87       	std	Y+9, r24	; 0x09
     7ca:	0f c0       	rjmp	.+30     	; 0x7ea <main+0xd6>
     7cc:	80 e9       	ldi	r24, 0x90	; 144
     7ce:	91 e0       	ldi	r25, 0x01	; 1
     7d0:	9c 87       	std	Y+12, r25	; 0x0c
     7d2:	8b 87       	std	Y+11, r24	; 0x0b
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     7d4:	8b 85       	ldd	r24, Y+11	; 0x0b
     7d6:	9c 85       	ldd	r25, Y+12	; 0x0c
     7d8:	01 97       	sbiw	r24, 0x01	; 1
     7da:	f1 f7       	brne	.-4      	; 0x7d8 <main+0xc4>
     7dc:	9c 87       	std	Y+12, r25	; 0x0c
     7de:	8b 87       	std	Y+11, r24	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     7e0:	89 85       	ldd	r24, Y+9	; 0x09
     7e2:	9a 85       	ldd	r25, Y+10	; 0x0a
     7e4:	01 97       	sbiw	r24, 0x01	; 1
     7e6:	9a 87       	std	Y+10, r25	; 0x0a
     7e8:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     7ea:	89 85       	ldd	r24, Y+9	; 0x09
     7ec:	9a 85       	ldd	r25, Y+10	; 0x0a
     7ee:	89 2b       	or	r24, r25
     7f0:	69 f7       	brne	.-38     	; 0x7cc <main+0xb8>
     7f2:	14 c0       	rjmp	.+40     	; 0x81c <__DATA_REGION_LENGTH__+0x1c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     7f4:	6d 81       	ldd	r22, Y+5	; 0x05
     7f6:	7e 81       	ldd	r23, Y+6	; 0x06
     7f8:	8f 81       	ldd	r24, Y+7	; 0x07
     7fa:	98 85       	ldd	r25, Y+8	; 0x08
     7fc:	0e 94 88 0a 	call	0x1510	; 0x1510 <__fixunssfsi>
     800:	dc 01       	movw	r26, r24
     802:	cb 01       	movw	r24, r22
     804:	9a 87       	std	Y+10, r25	; 0x0a
     806:	89 87       	std	Y+9, r24	; 0x09
     808:	89 85       	ldd	r24, Y+9	; 0x09
     80a:	9a 85       	ldd	r25, Y+10	; 0x0a
     80c:	9e 87       	std	Y+14, r25	; 0x0e
     80e:	8d 87       	std	Y+13, r24	; 0x0d
     810:	8d 85       	ldd	r24, Y+13	; 0x0d
     812:	9e 85       	ldd	r25, Y+14	; 0x0e
     814:	01 97       	sbiw	r24, 0x01	; 1
     816:	f1 f7       	brne	.-4      	; 0x814 <__DATA_REGION_LENGTH__+0x14>
     818:	9e 87       	std	Y+14, r25	; 0x0e
     81a:	8d 87       	std	Y+13, r24	; 0x0d
	_delay_ms(5);
	OLED_Clear();
     81c:	0e 94 cc 08 	call	0x1198	; 0x1198 <OLED_Clear>
	
	//initialize ports
	DDRB = 0x00;
     820:	84 e2       	ldi	r24, 0x24	; 36
     822:	90 e0       	ldi	r25, 0x00	; 0
     824:	fc 01       	movw	r30, r24
     826:	10 82       	st	Z, r1
	PORTB = 0xA0;
     828:	85 e2       	ldi	r24, 0x25	; 37
     82a:	90 e0       	ldi	r25, 0x00	; 0
     82c:	20 ea       	ldi	r18, 0xA0	; 160
     82e:	fc 01       	movw	r30, r24
     830:	20 83       	st	Z, r18
	DDRE |= (1<<DCmotor);//set motor pin to output
     832:	8d e2       	ldi	r24, 0x2D	; 45
     834:	90 e0       	ldi	r25, 0x00	; 0
     836:	2d e2       	ldi	r18, 0x2D	; 45
     838:	30 e0       	ldi	r19, 0x00	; 0
     83a:	f9 01       	movw	r30, r18
     83c:	20 81       	ld	r18, Z
     83e:	24 60       	ori	r18, 0x04	; 4
     840:	fc 01       	movw	r30, r24
     842:	20 83       	st	Z, r18
	DDRD &= ~(1<<sensorPin); 
     844:	8a e2       	ldi	r24, 0x2A	; 42
     846:	90 e0       	ldi	r25, 0x00	; 0
     848:	2a e2       	ldi	r18, 0x2A	; 42
     84a:	30 e0       	ldi	r19, 0x00	; 0
     84c:	f9 01       	movw	r30, r18
     84e:	20 81       	ld	r18, Z
     850:	2b 7f       	andi	r18, 0xFB	; 251
     852:	fc 01       	movw	r30, r24
     854:	20 83       	st	Z, r18
	
	// initialize timer1
	OCR1A=0xFFFF;//full speed: On-time of PWM
     856:	88 e8       	ldi	r24, 0x88	; 136
     858:	90 e0       	ldi	r25, 0x00	; 0
     85a:	2f ef       	ldi	r18, 0xFF	; 255
     85c:	3f ef       	ldi	r19, 0xFF	; 255
     85e:	fc 01       	movw	r30, r24
     860:	31 83       	std	Z+1, r19	; 0x01
     862:	20 83       	st	Z, r18
	OCR1B=0XFFFF;
     864:	8a e8       	ldi	r24, 0x8A	; 138
     866:	90 e0       	ldi	r25, 0x00	; 0
     868:	2f ef       	ldi	r18, 0xFF	; 255
     86a:	3f ef       	ldi	r19, 0xFF	; 255
     86c:	fc 01       	movw	r30, r24
     86e:	31 83       	std	Z+1, r19	; 0x01
     870:	20 83       	st	Z, r18
	TCNT1H = 0x00;
     872:	85 e8       	ldi	r24, 0x85	; 133
     874:	90 e0       	ldi	r25, 0x00	; 0
     876:	fc 01       	movw	r30, r24
     878:	10 82       	st	Z, r1
	TCNT1L = 0x00;
     87a:	84 e8       	ldi	r24, 0x84	; 132
     87c:	90 e0       	ldi	r25, 0x00	; 0
     87e:	fc 01       	movw	r30, r24
     880:	10 82       	st	Z, r1
	TCCR1A |= (1<<COM1A0)|(1<<COM1B0);//enable timer1a and timer1b comparison
     882:	80 e8       	ldi	r24, 0x80	; 128
     884:	90 e0       	ldi	r25, 0x00	; 0
     886:	20 e8       	ldi	r18, 0x80	; 128
     888:	30 e0       	ldi	r19, 0x00	; 0
     88a:	f9 01       	movw	r30, r18
     88c:	20 81       	ld	r18, Z
     88e:	20 65       	ori	r18, 0x50	; 80
     890:	fc 01       	movw	r30, r24
     892:	20 83       	st	Z, r18
	TCCR1B |= (1<<CS10); //enable timer1 with no pre-scaler
     894:	81 e8       	ldi	r24, 0x81	; 129
     896:	90 e0       	ldi	r25, 0x00	; 0
     898:	21 e8       	ldi	r18, 0x81	; 129
     89a:	30 e0       	ldi	r19, 0x00	; 0
     89c:	f9 01       	movw	r30, r18
     89e:	20 81       	ld	r18, Z
     8a0:	21 60       	ori	r18, 0x01	; 1
     8a2:	fc 01       	movw	r30, r24
     8a4:	20 83       	st	Z, r18
	
	TCCR0A |= (1<<WGM01); //set timer0 to be CTC
     8a6:	84 e4       	ldi	r24, 0x44	; 68
     8a8:	90 e0       	ldi	r25, 0x00	; 0
     8aa:	24 e4       	ldi	r18, 0x44	; 68
     8ac:	30 e0       	ldi	r19, 0x00	; 0
     8ae:	f9 01       	movw	r30, r18
     8b0:	20 81       	ld	r18, Z
     8b2:	22 60       	ori	r18, 0x02	; 2
     8b4:	fc 01       	movw	r30, r24
     8b6:	20 83       	st	Z, r18
    TCCR0B |= (1<<CS00)|(1<<CS02); //set timer0 to a 1024 pre-scaler
     8b8:	85 e4       	ldi	r24, 0x45	; 69
     8ba:	90 e0       	ldi	r25, 0x00	; 0
     8bc:	25 e4       	ldi	r18, 0x45	; 69
     8be:	30 e0       	ldi	r19, 0x00	; 0
     8c0:	f9 01       	movw	r30, r18
     8c2:	20 81       	ld	r18, Z
     8c4:	25 60       	ori	r18, 0x05	; 5
     8c6:	fc 01       	movw	r30, r24
     8c8:	20 83       	st	Z, r18
    TIMSK0 |= (1<<OCIE0A);    //set timer0A to have an interrupt
     8ca:	8e e6       	ldi	r24, 0x6E	; 110
     8cc:	90 e0       	ldi	r25, 0x00	; 0
     8ce:	2e e6       	ldi	r18, 0x6E	; 110
     8d0:	30 e0       	ldi	r19, 0x00	; 0
     8d2:	f9 01       	movw	r30, r18
     8d4:	20 81       	ld	r18, Z
     8d6:	22 60       	ori	r18, 0x02	; 2
     8d8:	fc 01       	movw	r30, r24
     8da:	20 83       	st	Z, r18
    OCR0A = 0xff; //set timer0A to interrupt when it reaches 0xff
     8dc:	87 e4       	ldi	r24, 0x47	; 71
     8de:	90 e0       	ldi	r25, 0x00	; 0
     8e0:	2f ef       	ldi	r18, 0xFF	; 255
     8e2:	fc 01       	movw	r30, r24
     8e4:	20 83       	st	Z, r18
    
	//enable INT0 interrupt
	EICRA |= (1<<ISC01);
     8e6:	89 e6       	ldi	r24, 0x69	; 105
     8e8:	90 e0       	ldi	r25, 0x00	; 0
     8ea:	29 e6       	ldi	r18, 0x69	; 105
     8ec:	30 e0       	ldi	r19, 0x00	; 0
     8ee:	f9 01       	movw	r30, r18
     8f0:	20 81       	ld	r18, Z
     8f2:	22 60       	ori	r18, 0x02	; 2
     8f4:	fc 01       	movw	r30, r24
     8f6:	20 83       	st	Z, r18
	EIMSK |= (1<<INT0);
     8f8:	8d e3       	ldi	r24, 0x3D	; 61
     8fa:	90 e0       	ldi	r25, 0x00	; 0
     8fc:	2d e3       	ldi	r18, 0x3D	; 61
     8fe:	30 e0       	ldi	r19, 0x00	; 0
     900:	f9 01       	movw	r30, r18
     902:	20 81       	ld	r18, Z
     904:	21 60       	ori	r18, 0x01	; 1
     906:	fc 01       	movw	r30, r24
     908:	20 83       	st	Z, r18
	
	sei();
     90a:	78 94       	sei
	
	while(1){
		if (count_int == 0) TIMSK1 &= ~(1<<OCIE1B);
     90c:	80 91 22 03 	lds	r24, 0x0322	; 0x800322 <count_int>
     910:	90 91 23 03 	lds	r25, 0x0323	; 0x800323 <count_int+0x1>
     914:	89 2b       	or	r24, r25
     916:	51 f4       	brne	.+20     	; 0x92c <__stack+0x2d>
     918:	8f e6       	ldi	r24, 0x6F	; 111
     91a:	90 e0       	ldi	r25, 0x00	; 0
     91c:	2f e6       	ldi	r18, 0x6F	; 111
     91e:	30 e0       	ldi	r19, 0x00	; 0
     920:	f9 01       	movw	r30, r18
     922:	20 81       	ld	r18, Z
     924:	2b 7f       	andi	r18, 0xFB	; 251
     926:	fc 01       	movw	r30, r24
     928:	20 83       	st	Z, r18
     92a:	19 c0       	rjmp	.+50     	; 0x95e <__stack+0x5f>
		else if (count_int == 10) TIMSK1 &= ~(1<<OCIE1A);
     92c:	80 91 22 03 	lds	r24, 0x0322	; 0x800322 <count_int>
     930:	90 91 23 03 	lds	r25, 0x0323	; 0x800323 <count_int+0x1>
     934:	0a 97       	sbiw	r24, 0x0a	; 10
     936:	51 f4       	brne	.+20     	; 0x94c <__stack+0x4d>
     938:	8f e6       	ldi	r24, 0x6F	; 111
     93a:	90 e0       	ldi	r25, 0x00	; 0
     93c:	2f e6       	ldi	r18, 0x6F	; 111
     93e:	30 e0       	ldi	r19, 0x00	; 0
     940:	f9 01       	movw	r30, r18
     942:	20 81       	ld	r18, Z
     944:	2d 7f       	andi	r18, 0xFD	; 253
     946:	fc 01       	movw	r30, r24
     948:	20 83       	st	Z, r18
     94a:	09 c0       	rjmp	.+18     	; 0x95e <__stack+0x5f>
		else TIMSK1 |= (1<<OCIE1A)|(1<<OCIE1B);
     94c:	8f e6       	ldi	r24, 0x6F	; 111
     94e:	90 e0       	ldi	r25, 0x00	; 0
     950:	2f e6       	ldi	r18, 0x6F	; 111
     952:	30 e0       	ldi	r19, 0x00	; 0
     954:	f9 01       	movw	r30, r18
     956:	20 81       	ld	r18, Z
     958:	26 60       	ori	r18, 0x06	; 6
     95a:	fc 01       	movw	r30, r24
     95c:	20 83       	st	Z, r18
		
		OCR1A = 0xFFFF * dc_adj * count_int/n; //reassign timer1 value for On-time pulse, dividing by 2 is
     95e:	08 e8       	ldi	r16, 0x88	; 136
     960:	10 e0       	ldi	r17, 0x00	; 0
     962:	8d ec       	ldi	r24, 0xCD	; 205
     964:	9c ec       	ldi	r25, 0xCC	; 204
     966:	ac ec       	ldi	r26, 0xCC	; 204
     968:	bd e3       	ldi	r27, 0x3D	; 61
     96a:	20 e0       	ldi	r18, 0x00	; 0
     96c:	3f ef       	ldi	r19, 0xFF	; 255
     96e:	4f e7       	ldi	r20, 0x7F	; 127
     970:	57 e4       	ldi	r21, 0x47	; 71
     972:	bc 01       	movw	r22, r24
     974:	cd 01       	movw	r24, r26
     976:	0e 94 6e 0b 	call	0x16dc	; 0x16dc <__mulsf3>
     97a:	dc 01       	movw	r26, r24
     97c:	cb 01       	movw	r24, r22
     97e:	6c 01       	movw	r12, r24
     980:	7d 01       	movw	r14, r26
     982:	80 91 22 03 	lds	r24, 0x0322	; 0x800322 <count_int>
     986:	90 91 23 03 	lds	r25, 0x0323	; 0x800323 <count_int+0x1>
     98a:	09 2e       	mov	r0, r25
     98c:	00 0c       	add	r0, r0
     98e:	aa 0b       	sbc	r26, r26
     990:	bb 0b       	sbc	r27, r27
     992:	bc 01       	movw	r22, r24
     994:	cd 01       	movw	r24, r26
     996:	0e 94 b9 0a 	call	0x1572	; 0x1572 <__floatsisf>
     99a:	dc 01       	movw	r26, r24
     99c:	cb 01       	movw	r24, r22
     99e:	9c 01       	movw	r18, r24
     9a0:	ad 01       	movw	r20, r26
     9a2:	c7 01       	movw	r24, r14
     9a4:	b6 01       	movw	r22, r12
     9a6:	0e 94 6e 0b 	call	0x16dc	; 0x16dc <__mulsf3>
     9aa:	dc 01       	movw	r26, r24
     9ac:	cb 01       	movw	r24, r22
     9ae:	6c 01       	movw	r12, r24
     9b0:	7d 01       	movw	r14, r26
     9b2:	81 e0       	ldi	r24, 0x01	; 1
     9b4:	90 e0       	ldi	r25, 0x00	; 0
     9b6:	09 2e       	mov	r0, r25
     9b8:	00 0c       	add	r0, r0
     9ba:	aa 0b       	sbc	r26, r26
     9bc:	bb 0b       	sbc	r27, r27
     9be:	bc 01       	movw	r22, r24
     9c0:	cd 01       	movw	r24, r26
     9c2:	0e 94 b9 0a 	call	0x1572	; 0x1572 <__floatsisf>
     9c6:	dc 01       	movw	r26, r24
     9c8:	cb 01       	movw	r24, r22
     9ca:	9c 01       	movw	r18, r24
     9cc:	ad 01       	movw	r20, r26
     9ce:	c7 01       	movw	r24, r14
     9d0:	b6 01       	movw	r22, r12
     9d2:	0e 94 0f 0a 	call	0x141e	; 0x141e <__divsf3>
     9d6:	dc 01       	movw	r26, r24
     9d8:	cb 01       	movw	r24, r22
     9da:	bc 01       	movw	r22, r24
     9dc:	cd 01       	movw	r24, r26
     9de:	0e 94 88 0a 	call	0x1510	; 0x1510 <__fixunssfsi>
     9e2:	dc 01       	movw	r26, r24
     9e4:	cb 01       	movw	r24, r22
     9e6:	f8 01       	movw	r30, r16
     9e8:	91 83       	std	Z+1, r25	; 0x01
     9ea:	80 83       	st	Z, r24

		checkJoystick();
     9ec:	0e 94 3a 03 	call	0x674	; 0x674 <checkJoystick>
		OLED_display();
     9f0:	0e 94 bf 02 	call	0x57e	; 0x57e <OLED_display>
	}
     9f4:	8b cf       	rjmp	.-234    	; 0x90c <__stack+0xd>

000009f6 <OLED_Init>:
#if (Enable_OLED_SetBrightness == 1)
void OLED_SetBrightness(uint8_t brightnessValue)
{
    oledSendCommand(SSD1306_SET_CONTRAST_CONTROL);
    oledSendCommand(brightnessValue);
}
     9f6:	cf 93       	push	r28
     9f8:	df 93       	push	r29
     9fa:	cd b7       	in	r28, 0x3d	; 61
     9fc:	de b7       	in	r29, 0x3e	; 62
     9fe:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <i2c_init>
     a02:	8e ea       	ldi	r24, 0xAE	; 174
     a04:	0e 94 87 09 	call	0x130e	; 0x130e <oledSendCommand>
     a08:	85 ed       	ldi	r24, 0xD5	; 213
     a0a:	0e 94 87 09 	call	0x130e	; 0x130e <oledSendCommand>
     a0e:	80 e8       	ldi	r24, 0x80	; 128
     a10:	0e 94 87 09 	call	0x130e	; 0x130e <oledSendCommand>
     a14:	88 ea       	ldi	r24, 0xA8	; 168
     a16:	0e 94 87 09 	call	0x130e	; 0x130e <oledSendCommand>
     a1a:	8f e3       	ldi	r24, 0x3F	; 63
     a1c:	0e 94 87 09 	call	0x130e	; 0x130e <oledSendCommand>
     a20:	83 ed       	ldi	r24, 0xD3	; 211
     a22:	0e 94 87 09 	call	0x130e	; 0x130e <oledSendCommand>
     a26:	80 e0       	ldi	r24, 0x00	; 0
     a28:	0e 94 87 09 	call	0x130e	; 0x130e <oledSendCommand>
     a2c:	80 e4       	ldi	r24, 0x40	; 64
     a2e:	0e 94 87 09 	call	0x130e	; 0x130e <oledSendCommand>
     a32:	8d e8       	ldi	r24, 0x8D	; 141
     a34:	0e 94 87 09 	call	0x130e	; 0x130e <oledSendCommand>
     a38:	84 e1       	ldi	r24, 0x14	; 20
     a3a:	0e 94 87 09 	call	0x130e	; 0x130e <oledSendCommand>
     a3e:	80 e2       	ldi	r24, 0x20	; 32
     a40:	0e 94 87 09 	call	0x130e	; 0x130e <oledSendCommand>
     a44:	80 e0       	ldi	r24, 0x00	; 0
     a46:	0e 94 87 09 	call	0x130e	; 0x130e <oledSendCommand>
     a4a:	81 ea       	ldi	r24, 0xA1	; 161
     a4c:	0e 94 87 09 	call	0x130e	; 0x130e <oledSendCommand>
     a50:	88 ec       	ldi	r24, 0xC8	; 200
     a52:	0e 94 87 09 	call	0x130e	; 0x130e <oledSendCommand>
     a56:	8a ed       	ldi	r24, 0xDA	; 218
     a58:	0e 94 87 09 	call	0x130e	; 0x130e <oledSendCommand>
     a5c:	82 e1       	ldi	r24, 0x12	; 18
     a5e:	0e 94 87 09 	call	0x130e	; 0x130e <oledSendCommand>
     a62:	81 e8       	ldi	r24, 0x81	; 129
     a64:	0e 94 87 09 	call	0x130e	; 0x130e <oledSendCommand>
     a68:	8f ec       	ldi	r24, 0xCF	; 207
     a6a:	0e 94 87 09 	call	0x130e	; 0x130e <oledSendCommand>
     a6e:	89 ed       	ldi	r24, 0xD9	; 217
     a70:	0e 94 87 09 	call	0x130e	; 0x130e <oledSendCommand>
     a74:	81 ef       	ldi	r24, 0xF1	; 241
     a76:	0e 94 87 09 	call	0x130e	; 0x130e <oledSendCommand>
     a7a:	8b ed       	ldi	r24, 0xDB	; 219
     a7c:	0e 94 87 09 	call	0x130e	; 0x130e <oledSendCommand>
     a80:	80 e4       	ldi	r24, 0x40	; 64
     a82:	0e 94 87 09 	call	0x130e	; 0x130e <oledSendCommand>
     a86:	84 ea       	ldi	r24, 0xA4	; 164
     a88:	0e 94 87 09 	call	0x130e	; 0x130e <oledSendCommand>
     a8c:	86 ea       	ldi	r24, 0xA6	; 166
     a8e:	0e 94 87 09 	call	0x130e	; 0x130e <oledSendCommand>
     a92:	8f ea       	ldi	r24, 0xAF	; 175
     a94:	0e 94 87 09 	call	0x130e	; 0x130e <oledSendCommand>
     a98:	0e 94 cc 08 	call	0x1198	; 0x1198 <OLED_Clear>
     a9c:	00 00       	nop
     a9e:	df 91       	pop	r29
     aa0:	cf 91       	pop	r28
     aa2:	08 95       	ret

00000aa4 <OLED_DisplayChar>:
     aa4:	cf 93       	push	r28
     aa6:	df 93       	push	r29
     aa8:	00 d0       	rcall	.+0      	; 0xaaa <OLED_DisplayChar+0x6>
     aaa:	1f 92       	push	r1
     aac:	cd b7       	in	r28, 0x3d	; 61
     aae:	de b7       	in	r29, 0x3e	; 62
     ab0:	8b 83       	std	Y+3, r24	; 0x03
     ab2:	19 82       	std	Y+1, r1	; 0x01
     ab4:	80 91 2c 03 	lds	r24, 0x032C	; 0x80032c <OledCursorPos>
     ab8:	88 2f       	mov	r24, r24
     aba:	90 e0       	ldi	r25, 0x00	; 0
     abc:	05 96       	adiw	r24, 0x05	; 5
     abe:	80 38       	cpi	r24, 0x80	; 128
     ac0:	91 05       	cpc	r25, r1
     ac2:	1c f4       	brge	.+6      	; 0xaca <OLED_DisplayChar+0x26>
     ac4:	8b 81       	ldd	r24, Y+3	; 0x03
     ac6:	8a 30       	cpi	r24, 0x0A	; 10
     ac8:	11 f4       	brne	.+4      	; 0xace <OLED_DisplayChar+0x2a>
     aca:	0e 94 17 09 	call	0x122e	; 0x122e <OLED_GoToNextLine>
     ace:	8b 81       	ldd	r24, Y+3	; 0x03
     ad0:	8a 30       	cpi	r24, 0x0A	; 10
     ad2:	71 f1       	breq	.+92     	; 0xb30 <OLED_DisplayChar+0x8c>
     ad4:	8b 81       	ldd	r24, Y+3	; 0x03
     ad6:	80 52       	subi	r24, 0x20	; 32
     ad8:	8b 83       	std	Y+3, r24	; 0x03
     ada:	8b 81       	ldd	r24, Y+3	; 0x03
     adc:	28 2f       	mov	r18, r24
     ade:	30 e0       	ldi	r19, 0x00	; 0
     ae0:	89 81       	ldd	r24, Y+1	; 0x01
     ae2:	48 2f       	mov	r20, r24
     ae4:	50 e0       	ldi	r21, 0x00	; 0
     ae6:	c9 01       	movw	r24, r18
     ae8:	88 0f       	add	r24, r24
     aea:	99 1f       	adc	r25, r25
     aec:	88 0f       	add	r24, r24
     aee:	99 1f       	adc	r25, r25
     af0:	82 0f       	add	r24, r18
     af2:	93 1f       	adc	r25, r19
     af4:	84 0f       	add	r24, r20
     af6:	95 1f       	adc	r25, r21
     af8:	8b 5b       	subi	r24, 0xBB	; 187
     afa:	9e 4f       	sbci	r25, 0xFE	; 254
     afc:	fc 01       	movw	r30, r24
     afe:	80 81       	ld	r24, Z
     b00:	8a 83       	std	Y+2, r24	; 0x02
     b02:	8a 81       	ldd	r24, Y+2	; 0x02
     b04:	0e 94 79 09 	call	0x12f2	; 0x12f2 <oledSendByte>
     b08:	80 91 2c 03 	lds	r24, 0x032C	; 0x80032c <OledCursorPos>
     b0c:	8f 5f       	subi	r24, 0xFF	; 255
     b0e:	80 93 2c 03 	sts	0x032C, r24	; 0x80032c <OledCursorPos>
     b12:	89 81       	ldd	r24, Y+1	; 0x01
     b14:	8f 5f       	subi	r24, 0xFF	; 255
     b16:	89 83       	std	Y+1, r24	; 0x01
     b18:	89 81       	ldd	r24, Y+1	; 0x01
     b1a:	85 30       	cpi	r24, 0x05	; 5
     b1c:	f1 f6       	brne	.-68     	; 0xada <OLED_DisplayChar+0x36>
     b1e:	80 e0       	ldi	r24, 0x00	; 0
     b20:	0e 94 79 09 	call	0x12f2	; 0x12f2 <oledSendByte>
     b24:	80 91 2c 03 	lds	r24, 0x032C	; 0x80032c <OledCursorPos>
     b28:	8f 5f       	subi	r24, 0xFF	; 255
     b2a:	80 93 2c 03 	sts	0x032C, r24	; 0x80032c <OledCursorPos>
     b2e:	00 00       	nop
     b30:	00 00       	nop
     b32:	0f 90       	pop	r0
     b34:	0f 90       	pop	r0
     b36:	0f 90       	pop	r0
     b38:	df 91       	pop	r29
     b3a:	cf 91       	pop	r28
     b3c:	08 95       	ret

00000b3e <OLED_DisplayString>:
     b3e:	cf 93       	push	r28
     b40:	df 93       	push	r29
     b42:	00 d0       	rcall	.+0      	; 0xb44 <OLED_DisplayString+0x6>
     b44:	cd b7       	in	r28, 0x3d	; 61
     b46:	de b7       	in	r29, 0x3e	; 62
     b48:	9a 83       	std	Y+2, r25	; 0x02
     b4a:	89 83       	std	Y+1, r24	; 0x01
     b4c:	0b c0       	rjmp	.+22     	; 0xb64 <OLED_DisplayString+0x26>
     b4e:	89 81       	ldd	r24, Y+1	; 0x01
     b50:	9a 81       	ldd	r25, Y+2	; 0x02
     b52:	9c 01       	movw	r18, r24
     b54:	2f 5f       	subi	r18, 0xFF	; 255
     b56:	3f 4f       	sbci	r19, 0xFF	; 255
     b58:	3a 83       	std	Y+2, r19	; 0x02
     b5a:	29 83       	std	Y+1, r18	; 0x01
     b5c:	fc 01       	movw	r30, r24
     b5e:	80 81       	ld	r24, Z
     b60:	0e 94 52 05 	call	0xaa4	; 0xaa4 <OLED_DisplayChar>
     b64:	89 81       	ldd	r24, Y+1	; 0x01
     b66:	9a 81       	ldd	r25, Y+2	; 0x02
     b68:	fc 01       	movw	r30, r24
     b6a:	80 81       	ld	r24, Z
     b6c:	88 23       	and	r24, r24
     b6e:	79 f7       	brne	.-34     	; 0xb4e <OLED_DisplayString+0x10>
     b70:	00 00       	nop
     b72:	0f 90       	pop	r0
     b74:	0f 90       	pop	r0
     b76:	df 91       	pop	r29
     b78:	cf 91       	pop	r28
     b7a:	08 95       	ret

00000b7c <OLED_DisplayNumber>:
     b7c:	ff 92       	push	r15
     b7e:	0f 93       	push	r16
     b80:	1f 93       	push	r17
     b82:	cf 93       	push	r28
     b84:	df 93       	push	r29
     b86:	cd b7       	in	r28, 0x3d	; 61
     b88:	de b7       	in	r29, 0x3e	; 62
     b8a:	61 97       	sbiw	r28, 0x11	; 17
     b8c:	0f b6       	in	r0, 0x3f	; 63
     b8e:	f8 94       	cli
     b90:	de bf       	out	0x3e, r29	; 62
     b92:	0f be       	out	0x3f, r0	; 63
     b94:	cd bf       	out	0x3d, r28	; 61
     b96:	8c 87       	std	Y+12, r24	; 0x0c
     b98:	4d 87       	std	Y+13, r20	; 0x0d
     b9a:	5e 87       	std	Y+14, r21	; 0x0e
     b9c:	6f 87       	std	Y+15, r22	; 0x0f
     b9e:	78 8b       	std	Y+16, r23	; 0x10
     ba0:	29 8b       	std	Y+17, r18	; 0x11
     ba2:	19 82       	std	Y+1, r1	; 0x01
     ba4:	8c 85       	ldd	r24, Y+12	; 0x0c
     ba6:	82 30       	cpi	r24, 0x02	; 2
     ba8:	61 f5       	brne	.+88     	; 0xc02 <OLED_DisplayNumber+0x86>
     baa:	27 c0       	rjmp	.+78     	; 0xbfa <OLED_DisplayNumber+0x7e>
     bac:	89 89       	ldd	r24, Y+17	; 0x11
     bae:	88 2f       	mov	r24, r24
     bb0:	90 e0       	ldi	r25, 0x00	; 0
     bb2:	9c 01       	movw	r18, r24
     bb4:	21 50       	subi	r18, 0x01	; 1
     bb6:	31 09       	sbc	r19, r1
     bb8:	81 e0       	ldi	r24, 0x01	; 1
     bba:	90 e0       	ldi	r25, 0x00	; 0
     bbc:	02 c0       	rjmp	.+4      	; 0xbc2 <OLED_DisplayNumber+0x46>
     bbe:	88 0f       	add	r24, r24
     bc0:	99 1f       	adc	r25, r25
     bc2:	2a 95       	dec	r18
     bc4:	e2 f7       	brpl	.-8      	; 0xbbe <OLED_DisplayNumber+0x42>
     bc6:	9c 01       	movw	r18, r24
     bc8:	99 0f       	add	r25, r25
     bca:	44 0b       	sbc	r20, r20
     bcc:	55 0b       	sbc	r21, r21
     bce:	8d 85       	ldd	r24, Y+13	; 0x0d
     bd0:	9e 85       	ldd	r25, Y+14	; 0x0e
     bd2:	af 85       	ldd	r26, Y+15	; 0x0f
     bd4:	b8 89       	ldd	r27, Y+16	; 0x10
     bd6:	82 23       	and	r24, r18
     bd8:	93 23       	and	r25, r19
     bda:	a4 23       	and	r26, r20
     bdc:	b5 23       	and	r27, r21
     bde:	21 e0       	ldi	r18, 0x01	; 1
     be0:	89 2b       	or	r24, r25
     be2:	8a 2b       	or	r24, r26
     be4:	8b 2b       	or	r24, r27
     be6:	09 f4       	brne	.+2      	; 0xbea <OLED_DisplayNumber+0x6e>
     be8:	20 e0       	ldi	r18, 0x00	; 0
     bea:	29 83       	std	Y+1, r18	; 0x01
     bec:	89 81       	ldd	r24, Y+1	; 0x01
     bee:	80 5d       	subi	r24, 0xD0	; 208
     bf0:	0e 94 52 05 	call	0xaa4	; 0xaa4 <OLED_DisplayChar>
     bf4:	89 89       	ldd	r24, Y+17	; 0x11
     bf6:	81 50       	subi	r24, 0x01	; 1
     bf8:	89 8b       	std	Y+17, r24	; 0x11
     bfa:	89 89       	ldd	r24, Y+17	; 0x11
     bfc:	88 23       	and	r24, r24
     bfe:	b1 f6       	brne	.-84     	; 0xbac <OLED_DisplayNumber+0x30>
     c00:	a0 c0       	rjmp	.+320    	; 0xd42 <OLED_DisplayNumber+0x1c6>
     c02:	8d 85       	ldd	r24, Y+13	; 0x0d
     c04:	9e 85       	ldd	r25, Y+14	; 0x0e
     c06:	af 85       	ldd	r26, Y+15	; 0x0f
     c08:	b8 89       	ldd	r27, Y+16	; 0x10
     c0a:	89 2b       	or	r24, r25
     c0c:	8a 2b       	or	r24, r26
     c0e:	8b 2b       	or	r24, r27
     c10:	89 f4       	brne	.+34     	; 0xc34 <OLED_DisplayNumber+0xb8>
     c12:	19 82       	std	Y+1, r1	; 0x01
     c14:	06 c0       	rjmp	.+12     	; 0xc22 <OLED_DisplayNumber+0xa6>
     c16:	80 e3       	ldi	r24, 0x30	; 48
     c18:	0e 94 52 05 	call	0xaa4	; 0xaa4 <OLED_DisplayChar>
     c1c:	89 81       	ldd	r24, Y+1	; 0x01
     c1e:	8f 5f       	subi	r24, 0xFF	; 255
     c20:	89 83       	std	Y+1, r24	; 0x01
     c22:	99 81       	ldd	r25, Y+1	; 0x01
     c24:	89 89       	ldd	r24, Y+17	; 0x11
     c26:	98 17       	cp	r25, r24
     c28:	08 f0       	brcs	.+2      	; 0xc2c <OLED_DisplayNumber+0xb0>
     c2a:	8b c0       	rjmp	.+278    	; 0xd42 <OLED_DisplayNumber+0x1c6>
     c2c:	89 81       	ldd	r24, Y+1	; 0x01
     c2e:	8a 30       	cpi	r24, 0x0A	; 10
     c30:	90 f3       	brcs	.-28     	; 0xc16 <OLED_DisplayNumber+0x9a>
     c32:	87 c0       	rjmp	.+270    	; 0xd42 <OLED_DisplayNumber+0x1c6>
     c34:	19 82       	std	Y+1, r1	; 0x01
     c36:	51 c0       	rjmp	.+162    	; 0xcda <OLED_DisplayNumber+0x15e>
     c38:	8d 85       	ldd	r24, Y+13	; 0x0d
     c3a:	9e 85       	ldd	r25, Y+14	; 0x0e
     c3c:	af 85       	ldd	r26, Y+15	; 0x0f
     c3e:	b8 89       	ldd	r27, Y+16	; 0x10
     c40:	89 2b       	or	r24, r25
     c42:	8a 2b       	or	r24, r26
     c44:	8b 2b       	or	r24, r27
     c46:	a1 f1       	breq	.+104    	; 0xcb0 <OLED_DisplayNumber+0x134>
     c48:	89 81       	ldd	r24, Y+1	; 0x01
     c4a:	08 2f       	mov	r16, r24
     c4c:	10 e0       	ldi	r17, 0x00	; 0
     c4e:	fd 84       	ldd	r15, Y+13	; 0x0d
     c50:	8c 85       	ldd	r24, Y+12	; 0x0c
     c52:	28 2f       	mov	r18, r24
     c54:	30 e0       	ldi	r19, 0x00	; 0
     c56:	40 e0       	ldi	r20, 0x00	; 0
     c58:	50 e0       	ldi	r21, 0x00	; 0
     c5a:	8d 85       	ldd	r24, Y+13	; 0x0d
     c5c:	9e 85       	ldd	r25, Y+14	; 0x0e
     c5e:	af 85       	ldd	r26, Y+15	; 0x0f
     c60:	b8 89       	ldd	r27, Y+16	; 0x10
     c62:	bc 01       	movw	r22, r24
     c64:	cd 01       	movw	r24, r26
     c66:	0e 94 db 0b 	call	0x17b6	; 0x17b6 <__udivmodsi4>
     c6a:	da 01       	movw	r26, r20
     c6c:	c9 01       	movw	r24, r18
     c6e:	98 2f       	mov	r25, r24
     c70:	8c 85       	ldd	r24, Y+12	; 0x0c
     c72:	98 9f       	mul	r25, r24
     c74:	80 2d       	mov	r24, r0
     c76:	11 24       	eor	r1, r1
     c78:	2f 2d       	mov	r18, r15
     c7a:	28 1b       	sub	r18, r24
     c7c:	ce 01       	movw	r24, r28
     c7e:	02 96       	adiw	r24, 0x02	; 2
     c80:	80 0f       	add	r24, r16
     c82:	91 1f       	adc	r25, r17
     c84:	fc 01       	movw	r30, r24
     c86:	20 83       	st	Z, r18
     c88:	8c 85       	ldd	r24, Y+12	; 0x0c
     c8a:	28 2f       	mov	r18, r24
     c8c:	30 e0       	ldi	r19, 0x00	; 0
     c8e:	40 e0       	ldi	r20, 0x00	; 0
     c90:	50 e0       	ldi	r21, 0x00	; 0
     c92:	8d 85       	ldd	r24, Y+13	; 0x0d
     c94:	9e 85       	ldd	r25, Y+14	; 0x0e
     c96:	af 85       	ldd	r26, Y+15	; 0x0f
     c98:	b8 89       	ldd	r27, Y+16	; 0x10
     c9a:	bc 01       	movw	r22, r24
     c9c:	cd 01       	movw	r24, r26
     c9e:	0e 94 db 0b 	call	0x17b6	; 0x17b6 <__udivmodsi4>
     ca2:	da 01       	movw	r26, r20
     ca4:	c9 01       	movw	r24, r18
     ca6:	8d 87       	std	Y+13, r24	; 0x0d
     ca8:	9e 87       	std	Y+14, r25	; 0x0e
     caa:	af 87       	std	Y+15, r26	; 0x0f
     cac:	b8 8b       	std	Y+16, r27	; 0x10
     cae:	12 c0       	rjmp	.+36     	; 0xcd4 <OLED_DisplayNumber+0x158>
     cb0:	89 89       	ldd	r24, Y+17	; 0x11
     cb2:	8f 3f       	cpi	r24, 0xFF	; 255
     cb4:	09 f4       	brne	.+2      	; 0xcb8 <OLED_DisplayNumber+0x13c>
     cb6:	42 c0       	rjmp	.+132    	; 0xd3c <OLED_DisplayNumber+0x1c0>
     cb8:	89 89       	ldd	r24, Y+17	; 0x11
     cba:	8b 30       	cpi	r24, 0x0B	; 11
     cbc:	08 f0       	brcs	.+2      	; 0xcc0 <OLED_DisplayNumber+0x144>
     cbe:	3e c0       	rjmp	.+124    	; 0xd3c <OLED_DisplayNumber+0x1c0>
     cc0:	89 81       	ldd	r24, Y+1	; 0x01
     cc2:	88 2f       	mov	r24, r24
     cc4:	90 e0       	ldi	r25, 0x00	; 0
     cc6:	9e 01       	movw	r18, r28
     cc8:	2e 5f       	subi	r18, 0xFE	; 254
     cca:	3f 4f       	sbci	r19, 0xFF	; 255
     ccc:	82 0f       	add	r24, r18
     cce:	93 1f       	adc	r25, r19
     cd0:	fc 01       	movw	r30, r24
     cd2:	10 82       	st	Z, r1
     cd4:	89 81       	ldd	r24, Y+1	; 0x01
     cd6:	8f 5f       	subi	r24, 0xFF	; 255
     cd8:	89 83       	std	Y+1, r24	; 0x01
     cda:	99 81       	ldd	r25, Y+1	; 0x01
     cdc:	89 89       	ldd	r24, Y+17	; 0x11
     cde:	98 17       	cp	r25, r24
     ce0:	08 f4       	brcc	.+2      	; 0xce4 <OLED_DisplayNumber+0x168>
     ce2:	aa cf       	rjmp	.-172    	; 0xc38 <OLED_DisplayNumber+0xbc>
     ce4:	2b c0       	rjmp	.+86     	; 0xd3c <OLED_DisplayNumber+0x1c0>
     ce6:	89 81       	ldd	r24, Y+1	; 0x01
     ce8:	88 2f       	mov	r24, r24
     cea:	90 e0       	ldi	r25, 0x00	; 0
     cec:	01 97       	sbiw	r24, 0x01	; 1
     cee:	9e 01       	movw	r18, r28
     cf0:	2e 5f       	subi	r18, 0xFE	; 254
     cf2:	3f 4f       	sbci	r19, 0xFF	; 255
     cf4:	82 0f       	add	r24, r18
     cf6:	93 1f       	adc	r25, r19
     cf8:	fc 01       	movw	r30, r24
     cfa:	80 81       	ld	r24, Z
     cfc:	8a 30       	cpi	r24, 0x0A	; 10
     cfe:	68 f0       	brcs	.+26     	; 0xd1a <OLED_DisplayNumber+0x19e>
     d00:	89 81       	ldd	r24, Y+1	; 0x01
     d02:	88 2f       	mov	r24, r24
     d04:	90 e0       	ldi	r25, 0x00	; 0
     d06:	01 97       	sbiw	r24, 0x01	; 1
     d08:	9e 01       	movw	r18, r28
     d0a:	2e 5f       	subi	r18, 0xFE	; 254
     d0c:	3f 4f       	sbci	r19, 0xFF	; 255
     d0e:	82 0f       	add	r24, r18
     d10:	93 1f       	adc	r25, r19
     d12:	fc 01       	movw	r30, r24
     d14:	80 81       	ld	r24, Z
     d16:	89 5c       	subi	r24, 0xC9	; 201
     d18:	0c c0       	rjmp	.+24     	; 0xd32 <OLED_DisplayNumber+0x1b6>
     d1a:	89 81       	ldd	r24, Y+1	; 0x01
     d1c:	88 2f       	mov	r24, r24
     d1e:	90 e0       	ldi	r25, 0x00	; 0
     d20:	01 97       	sbiw	r24, 0x01	; 1
     d22:	9e 01       	movw	r18, r28
     d24:	2e 5f       	subi	r18, 0xFE	; 254
     d26:	3f 4f       	sbci	r19, 0xFF	; 255
     d28:	82 0f       	add	r24, r18
     d2a:	93 1f       	adc	r25, r19
     d2c:	fc 01       	movw	r30, r24
     d2e:	80 81       	ld	r24, Z
     d30:	80 5d       	subi	r24, 0xD0	; 208
     d32:	0e 94 52 05 	call	0xaa4	; 0xaa4 <OLED_DisplayChar>
     d36:	89 81       	ldd	r24, Y+1	; 0x01
     d38:	81 50       	subi	r24, 0x01	; 1
     d3a:	89 83       	std	Y+1, r24	; 0x01
     d3c:	89 81       	ldd	r24, Y+1	; 0x01
     d3e:	88 23       	and	r24, r24
     d40:	91 f6       	brne	.-92     	; 0xce6 <OLED_DisplayNumber+0x16a>
     d42:	00 00       	nop
     d44:	61 96       	adiw	r28, 0x11	; 17
     d46:	0f b6       	in	r0, 0x3f	; 63
     d48:	f8 94       	cli
     d4a:	de bf       	out	0x3e, r29	; 62
     d4c:	0f be       	out	0x3f, r0	; 63
     d4e:	cd bf       	out	0x3d, r28	; 61
     d50:	df 91       	pop	r29
     d52:	cf 91       	pop	r28
     d54:	1f 91       	pop	r17
     d56:	0f 91       	pop	r16
     d58:	ff 90       	pop	r15
     d5a:	08 95       	ret

00000d5c <OLED_DisplayFloatNumber>:
     d5c:	cf 93       	push	r28
     d5e:	df 93       	push	r29
     d60:	cd b7       	in	r28, 0x3d	; 61
     d62:	de b7       	in	r29, 0x3e	; 62
     d64:	28 97       	sbiw	r28, 0x08	; 8
     d66:	0f b6       	in	r0, 0x3f	; 63
     d68:	f8 94       	cli
     d6a:	de bf       	out	0x3e, r29	; 62
     d6c:	0f be       	out	0x3f, r0	; 63
     d6e:	cd bf       	out	0x3d, r28	; 61
     d70:	6d 83       	std	Y+5, r22	; 0x05
     d72:	7e 83       	std	Y+6, r23	; 0x06
     d74:	8f 83       	std	Y+7, r24	; 0x07
     d76:	98 87       	std	Y+8, r25	; 0x08
     d78:	6d 81       	ldd	r22, Y+5	; 0x05
     d7a:	7e 81       	ldd	r23, Y+6	; 0x06
     d7c:	8f 81       	ldd	r24, Y+7	; 0x07
     d7e:	98 85       	ldd	r25, Y+8	; 0x08
     d80:	0e 94 88 0a 	call	0x1510	; 0x1510 <__fixunssfsi>
     d84:	dc 01       	movw	r26, r24
     d86:	cb 01       	movw	r24, r22
     d88:	89 83       	std	Y+1, r24	; 0x01
     d8a:	9a 83       	std	Y+2, r25	; 0x02
     d8c:	ab 83       	std	Y+3, r26	; 0x03
     d8e:	bc 83       	std	Y+4, r27	; 0x04
     d90:	89 81       	ldd	r24, Y+1	; 0x01
     d92:	9a 81       	ldd	r25, Y+2	; 0x02
     d94:	ab 81       	ldd	r26, Y+3	; 0x03
     d96:	bc 81       	ldd	r27, Y+4	; 0x04
     d98:	2f ef       	ldi	r18, 0xFF	; 255
     d9a:	ac 01       	movw	r20, r24
     d9c:	bd 01       	movw	r22, r26
     d9e:	8a e0       	ldi	r24, 0x0A	; 10
     da0:	0e 94 be 05 	call	0xb7c	; 0xb7c <OLED_DisplayNumber>
     da4:	8e e2       	ldi	r24, 0x2E	; 46
     da6:	0e 94 52 05 	call	0xaa4	; 0xaa4 <OLED_DisplayChar>
     daa:	69 81       	ldd	r22, Y+1	; 0x01
     dac:	7a 81       	ldd	r23, Y+2	; 0x02
     dae:	8b 81       	ldd	r24, Y+3	; 0x03
     db0:	9c 81       	ldd	r25, Y+4	; 0x04
     db2:	0e 94 b7 0a 	call	0x156e	; 0x156e <__floatunsisf>
     db6:	dc 01       	movw	r26, r24
     db8:	cb 01       	movw	r24, r22
     dba:	9c 01       	movw	r18, r24
     dbc:	ad 01       	movw	r20, r26
     dbe:	6d 81       	ldd	r22, Y+5	; 0x05
     dc0:	7e 81       	ldd	r23, Y+6	; 0x06
     dc2:	8f 81       	ldd	r24, Y+7	; 0x07
     dc4:	98 85       	ldd	r25, Y+8	; 0x08
     dc6:	0e 94 9d 09 	call	0x133a	; 0x133a <__subsf3>
     dca:	dc 01       	movw	r26, r24
     dcc:	cb 01       	movw	r24, r22
     dce:	8d 83       	std	Y+5, r24	; 0x05
     dd0:	9e 83       	std	Y+6, r25	; 0x06
     dd2:	af 83       	std	Y+7, r26	; 0x07
     dd4:	b8 87       	std	Y+8, r27	; 0x08
     dd6:	20 e0       	ldi	r18, 0x00	; 0
     dd8:	34 e2       	ldi	r19, 0x24	; 36
     dda:	44 e7       	ldi	r20, 0x74	; 116
     ddc:	59 e4       	ldi	r21, 0x49	; 73
     dde:	6d 81       	ldd	r22, Y+5	; 0x05
     de0:	7e 81       	ldd	r23, Y+6	; 0x06
     de2:	8f 81       	ldd	r24, Y+7	; 0x07
     de4:	98 85       	ldd	r25, Y+8	; 0x08
     de6:	0e 94 6e 0b 	call	0x16dc	; 0x16dc <__mulsf3>
     dea:	dc 01       	movw	r26, r24
     dec:	cb 01       	movw	r24, r22
     dee:	bc 01       	movw	r22, r24
     df0:	cd 01       	movw	r24, r26
     df2:	0e 94 88 0a 	call	0x1510	; 0x1510 <__fixunssfsi>
     df6:	dc 01       	movw	r26, r24
     df8:	cb 01       	movw	r24, r22
     dfa:	89 83       	std	Y+1, r24	; 0x01
     dfc:	9a 83       	std	Y+2, r25	; 0x02
     dfe:	ab 83       	std	Y+3, r26	; 0x03
     e00:	bc 83       	std	Y+4, r27	; 0x04
     e02:	89 81       	ldd	r24, Y+1	; 0x01
     e04:	9a 81       	ldd	r25, Y+2	; 0x02
     e06:	ab 81       	ldd	r26, Y+3	; 0x03
     e08:	bc 81       	ldd	r27, Y+4	; 0x04
     e0a:	2f ef       	ldi	r18, 0xFF	; 255
     e0c:	ac 01       	movw	r20, r24
     e0e:	bd 01       	movw	r22, r26
     e10:	8a e0       	ldi	r24, 0x0A	; 10
     e12:	0e 94 be 05 	call	0xb7c	; 0xb7c <OLED_DisplayNumber>
     e16:	00 00       	nop
     e18:	28 96       	adiw	r28, 0x08	; 8
     e1a:	0f b6       	in	r0, 0x3f	; 63
     e1c:	f8 94       	cli
     e1e:	de bf       	out	0x3e, r29	; 62
     e20:	0f be       	out	0x3f, r0	; 63
     e22:	cd bf       	out	0x3d, r28	; 61
     e24:	df 91       	pop	r29
     e26:	cf 91       	pop	r28
     e28:	08 95       	ret

00000e2a <OLED_Printf>:
     e2a:	cf 93       	push	r28
     e2c:	df 93       	push	r29
     e2e:	cd b7       	in	r28, 0x3d	; 61
     e30:	de b7       	in	r29, 0x3e	; 62
     e32:	68 97       	sbiw	r28, 0x18	; 24
     e34:	0f b6       	in	r0, 0x3f	; 63
     e36:	f8 94       	cli
     e38:	de bf       	out	0x3e, r29	; 62
     e3a:	0f be       	out	0x3f, r0	; 63
     e3c:	cd bf       	out	0x3d, r28	; 61
     e3e:	ce 01       	movw	r24, r28
     e40:	4f 96       	adiw	r24, 0x1f	; 31
     e42:	98 8f       	std	Y+24, r25	; 0x18
     e44:	8f 8b       	std	Y+23, r24	; 0x17
     e46:	8d 8d       	ldd	r24, Y+29	; 0x1d
     e48:	9e 8d       	ldd	r25, Y+30	; 0x1e
     e4a:	9a 83       	std	Y+2, r25	; 0x02
     e4c:	89 83       	std	Y+1, r24	; 0x01
     e4e:	93 c1       	rjmp	.+806    	; 0x1176 <OLED_Printf+0x34c>
     e50:	89 81       	ldd	r24, Y+1	; 0x01
     e52:	9a 81       	ldd	r25, Y+2	; 0x02
     e54:	fc 01       	movw	r30, r24
     e56:	80 81       	ld	r24, Z
     e58:	89 87       	std	Y+9, r24	; 0x09
     e5a:	89 85       	ldd	r24, Y+9	; 0x09
     e5c:	85 32       	cpi	r24, 0x25	; 37
     e5e:	09 f0       	breq	.+2      	; 0xe62 <OLED_Printf+0x38>
     e60:	82 c1       	rjmp	.+772    	; 0x1166 <OLED_Printf+0x33c>
     e62:	89 81       	ldd	r24, Y+1	; 0x01
     e64:	9a 81       	ldd	r25, Y+2	; 0x02
     e66:	01 96       	adiw	r24, 0x01	; 1
     e68:	9a 83       	std	Y+2, r25	; 0x02
     e6a:	89 83       	std	Y+1, r24	; 0x01
     e6c:	89 81       	ldd	r24, Y+1	; 0x01
     e6e:	9a 81       	ldd	r25, Y+2	; 0x02
     e70:	fc 01       	movw	r30, r24
     e72:	80 81       	ld	r24, Z
     e74:	89 87       	std	Y+9, r24	; 0x09
     e76:	89 85       	ldd	r24, Y+9	; 0x09
     e78:	80 33       	cpi	r24, 0x30	; 48
     e7a:	00 f1       	brcs	.+64     	; 0xebc <OLED_Printf+0x92>
     e7c:	89 85       	ldd	r24, Y+9	; 0x09
     e7e:	8a 33       	cpi	r24, 0x3A	; 58
     e80:	e8 f4       	brcc	.+58     	; 0xebc <OLED_Printf+0x92>
     e82:	1a 86       	std	Y+10, r1	; 0x0a
     e84:	14 c0       	rjmp	.+40     	; 0xeae <OLED_Printf+0x84>
     e86:	8a 85       	ldd	r24, Y+10	; 0x0a
     e88:	88 0f       	add	r24, r24
     e8a:	98 2f       	mov	r25, r24
     e8c:	99 0f       	add	r25, r25
     e8e:	99 0f       	add	r25, r25
     e90:	98 0f       	add	r25, r24
     e92:	89 85       	ldd	r24, Y+9	; 0x09
     e94:	89 0f       	add	r24, r25
     e96:	80 53       	subi	r24, 0x30	; 48
     e98:	8a 87       	std	Y+10, r24	; 0x0a
     e9a:	89 81       	ldd	r24, Y+1	; 0x01
     e9c:	9a 81       	ldd	r25, Y+2	; 0x02
     e9e:	01 96       	adiw	r24, 0x01	; 1
     ea0:	9a 83       	std	Y+2, r25	; 0x02
     ea2:	89 83       	std	Y+1, r24	; 0x01
     ea4:	89 81       	ldd	r24, Y+1	; 0x01
     ea6:	9a 81       	ldd	r25, Y+2	; 0x02
     ea8:	fc 01       	movw	r30, r24
     eaa:	80 81       	ld	r24, Z
     eac:	89 87       	std	Y+9, r24	; 0x09
     eae:	89 85       	ldd	r24, Y+9	; 0x09
     eb0:	80 33       	cpi	r24, 0x30	; 48
     eb2:	38 f0       	brcs	.+14     	; 0xec2 <OLED_Printf+0x98>
     eb4:	89 85       	ldd	r24, Y+9	; 0x09
     eb6:	8a 33       	cpi	r24, 0x3A	; 58
     eb8:	30 f3       	brcs	.-52     	; 0xe86 <OLED_Printf+0x5c>
     eba:	03 c0       	rjmp	.+6      	; 0xec2 <OLED_Printf+0x98>
     ebc:	8f ef       	ldi	r24, 0xFF	; 255
     ebe:	8a 87       	std	Y+10, r24	; 0x0a
     ec0:	01 c0       	rjmp	.+2      	; 0xec4 <OLED_Printf+0x9a>
     ec2:	00 00       	nop
     ec4:	89 85       	ldd	r24, Y+9	; 0x09
     ec6:	88 2f       	mov	r24, r24
     ec8:	90 e0       	ldi	r25, 0x00	; 0
     eca:	09 2e       	mov	r0, r25
     ecc:	00 0c       	add	r0, r0
     ece:	aa 0b       	sbc	r26, r26
     ed0:	bb 0b       	sbc	r27, r27
     ed2:	45 e2       	ldi	r20, 0x25	; 37
     ed4:	50 e0       	ldi	r21, 0x00	; 0
     ed6:	23 e5       	ldi	r18, 0x53	; 83
     ed8:	30 e0       	ldi	r19, 0x00	; 0
     eda:	84 1b       	sub	r24, r20
     edc:	95 0b       	sbc	r25, r21
     ede:	28 17       	cp	r18, r24
     ee0:	39 07       	cpc	r19, r25
     ee2:	08 f4       	brcc	.+2      	; 0xee6 <OLED_Printf+0xbc>
     ee4:	43 c1       	rjmp	.+646    	; 0x116c <OLED_Printf+0x342>
     ee6:	8a 59       	subi	r24, 0x9A	; 154
     ee8:	9f 4f       	sbci	r25, 0xFF	; 255
     eea:	fc 01       	movw	r30, r24
     eec:	0c 94 fd 0b 	jmp	0x17fa	; 0x17fa <__tablejump2__>
     ef0:	8f 89       	ldd	r24, Y+23	; 0x17
     ef2:	98 8d       	ldd	r25, Y+24	; 0x18
     ef4:	9c 01       	movw	r18, r24
     ef6:	2e 5f       	subi	r18, 0xFE	; 254
     ef8:	3f 4f       	sbci	r19, 0xFF	; 255
     efa:	38 8f       	std	Y+24, r19	; 0x18
     efc:	2f 8b       	std	Y+23, r18	; 0x17
     efe:	fc 01       	movw	r30, r24
     f00:	80 81       	ld	r24, Z
     f02:	91 81       	ldd	r25, Z+1	; 0x01
     f04:	89 87       	std	Y+9, r24	; 0x09
     f06:	89 85       	ldd	r24, Y+9	; 0x09
     f08:	0e 94 52 05 	call	0xaa4	; 0xaa4 <OLED_DisplayChar>
     f0c:	2f c1       	rjmp	.+606    	; 0x116c <OLED_Printf+0x342>
     f0e:	8f 89       	ldd	r24, Y+23	; 0x17
     f10:	98 8d       	ldd	r25, Y+24	; 0x18
     f12:	9c 01       	movw	r18, r24
     f14:	2e 5f       	subi	r18, 0xFE	; 254
     f16:	3f 4f       	sbci	r19, 0xFF	; 255
     f18:	38 8f       	std	Y+24, r19	; 0x18
     f1a:	2f 8b       	std	Y+23, r18	; 0x17
     f1c:	fc 01       	movw	r30, r24
     f1e:	80 81       	ld	r24, Z
     f20:	91 81       	ldd	r25, Z+1	; 0x01
     f22:	9c 83       	std	Y+4, r25	; 0x04
     f24:	8b 83       	std	Y+3, r24	; 0x03
     f26:	8b 81       	ldd	r24, Y+3	; 0x03
     f28:	9c 81       	ldd	r25, Y+4	; 0x04
     f2a:	99 23       	and	r25, r25
     f2c:	54 f4       	brge	.+20     	; 0xf42 <OLED_Printf+0x118>
     f2e:	8b 81       	ldd	r24, Y+3	; 0x03
     f30:	9c 81       	ldd	r25, Y+4	; 0x04
     f32:	91 95       	neg	r25
     f34:	81 95       	neg	r24
     f36:	91 09       	sbc	r25, r1
     f38:	9c 83       	std	Y+4, r25	; 0x04
     f3a:	8b 83       	std	Y+3, r24	; 0x03
     f3c:	8d e2       	ldi	r24, 0x2D	; 45
     f3e:	0e 94 52 05 	call	0xaa4	; 0xaa4 <OLED_DisplayChar>
     f42:	8b 81       	ldd	r24, Y+3	; 0x03
     f44:	9c 81       	ldd	r25, Y+4	; 0x04
     f46:	09 2e       	mov	r0, r25
     f48:	00 0c       	add	r0, r0
     f4a:	aa 0b       	sbc	r26, r26
     f4c:	bb 0b       	sbc	r27, r27
     f4e:	2a 85       	ldd	r18, Y+10	; 0x0a
     f50:	ac 01       	movw	r20, r24
     f52:	bd 01       	movw	r22, r26
     f54:	8a e0       	ldi	r24, 0x0A	; 10
     f56:	0e 94 be 05 	call	0xb7c	; 0xb7c <OLED_DisplayNumber>
     f5a:	08 c1       	rjmp	.+528    	; 0x116c <OLED_Printf+0x342>
     f5c:	8f 89       	ldd	r24, Y+23	; 0x17
     f5e:	98 8d       	ldd	r25, Y+24	; 0x18
     f60:	9c 01       	movw	r18, r24
     f62:	2c 5f       	subi	r18, 0xFC	; 252
     f64:	3f 4f       	sbci	r19, 0xFF	; 255
     f66:	38 8f       	std	Y+24, r19	; 0x18
     f68:	2f 8b       	std	Y+23, r18	; 0x17
     f6a:	fc 01       	movw	r30, r24
     f6c:	80 81       	ld	r24, Z
     f6e:	91 81       	ldd	r25, Z+1	; 0x01
     f70:	a2 81       	ldd	r26, Z+2	; 0x02
     f72:	b3 81       	ldd	r27, Z+3	; 0x03
     f74:	8d 83       	std	Y+5, r24	; 0x05
     f76:	9e 83       	std	Y+6, r25	; 0x06
     f78:	af 83       	std	Y+7, r26	; 0x07
     f7a:	b8 87       	std	Y+8, r27	; 0x08
     f7c:	8d 81       	ldd	r24, Y+5	; 0x05
     f7e:	9e 81       	ldd	r25, Y+6	; 0x06
     f80:	af 81       	ldd	r26, Y+7	; 0x07
     f82:	b8 85       	ldd	r27, Y+8	; 0x08
     f84:	bb 23       	and	r27, r27
     f86:	94 f4       	brge	.+36     	; 0xfac <OLED_Printf+0x182>
     f88:	8d 81       	ldd	r24, Y+5	; 0x05
     f8a:	9e 81       	ldd	r25, Y+6	; 0x06
     f8c:	af 81       	ldd	r26, Y+7	; 0x07
     f8e:	b8 85       	ldd	r27, Y+8	; 0x08
     f90:	b0 95       	com	r27
     f92:	a0 95       	com	r26
     f94:	90 95       	com	r25
     f96:	81 95       	neg	r24
     f98:	9f 4f       	sbci	r25, 0xFF	; 255
     f9a:	af 4f       	sbci	r26, 0xFF	; 255
     f9c:	bf 4f       	sbci	r27, 0xFF	; 255
     f9e:	8d 83       	std	Y+5, r24	; 0x05
     fa0:	9e 83       	std	Y+6, r25	; 0x06
     fa2:	af 83       	std	Y+7, r26	; 0x07
     fa4:	b8 87       	std	Y+8, r27	; 0x08
     fa6:	8d e2       	ldi	r24, 0x2D	; 45
     fa8:	0e 94 52 05 	call	0xaa4	; 0xaa4 <OLED_DisplayChar>
     fac:	8d 81       	ldd	r24, Y+5	; 0x05
     fae:	9e 81       	ldd	r25, Y+6	; 0x06
     fb0:	af 81       	ldd	r26, Y+7	; 0x07
     fb2:	b8 85       	ldd	r27, Y+8	; 0x08
     fb4:	2a 85       	ldd	r18, Y+10	; 0x0a
     fb6:	ac 01       	movw	r20, r24
     fb8:	bd 01       	movw	r22, r26
     fba:	8a e0       	ldi	r24, 0x0A	; 10
     fbc:	0e 94 be 05 	call	0xb7c	; 0xb7c <OLED_DisplayNumber>
     fc0:	d5 c0       	rjmp	.+426    	; 0x116c <OLED_Printf+0x342>
     fc2:	8f 89       	ldd	r24, Y+23	; 0x17
     fc4:	98 8d       	ldd	r25, Y+24	; 0x18
     fc6:	9c 01       	movw	r18, r24
     fc8:	2e 5f       	subi	r18, 0xFE	; 254
     fca:	3f 4f       	sbci	r19, 0xFF	; 255
     fcc:	38 8f       	std	Y+24, r19	; 0x18
     fce:	2f 8b       	std	Y+23, r18	; 0x17
     fd0:	fc 01       	movw	r30, r24
     fd2:	80 81       	ld	r24, Z
     fd4:	91 81       	ldd	r25, Z+1	; 0x01
     fd6:	9c 87       	std	Y+12, r25	; 0x0c
     fd8:	8b 87       	std	Y+11, r24	; 0x0b
     fda:	8b 85       	ldd	r24, Y+11	; 0x0b
     fdc:	9c 85       	ldd	r25, Y+12	; 0x0c
     fde:	cc 01       	movw	r24, r24
     fe0:	a0 e0       	ldi	r26, 0x00	; 0
     fe2:	b0 e0       	ldi	r27, 0x00	; 0
     fe4:	2a 85       	ldd	r18, Y+10	; 0x0a
     fe6:	ac 01       	movw	r20, r24
     fe8:	bd 01       	movw	r22, r26
     fea:	8a e0       	ldi	r24, 0x0A	; 10
     fec:	0e 94 be 05 	call	0xb7c	; 0xb7c <OLED_DisplayNumber>
     ff0:	bd c0       	rjmp	.+378    	; 0x116c <OLED_Printf+0x342>
     ff2:	8f 89       	ldd	r24, Y+23	; 0x17
     ff4:	98 8d       	ldd	r25, Y+24	; 0x18
     ff6:	9c 01       	movw	r18, r24
     ff8:	2c 5f       	subi	r18, 0xFC	; 252
     ffa:	3f 4f       	sbci	r19, 0xFF	; 255
     ffc:	38 8f       	std	Y+24, r19	; 0x18
     ffe:	2f 8b       	std	Y+23, r18	; 0x17
    1000:	fc 01       	movw	r30, r24
    1002:	80 81       	ld	r24, Z
    1004:	91 81       	ldd	r25, Z+1	; 0x01
    1006:	a2 81       	ldd	r26, Z+2	; 0x02
    1008:	b3 81       	ldd	r27, Z+3	; 0x03
    100a:	8d 87       	std	Y+13, r24	; 0x0d
    100c:	9e 87       	std	Y+14, r25	; 0x0e
    100e:	af 87       	std	Y+15, r26	; 0x0f
    1010:	b8 8b       	std	Y+16, r27	; 0x10
    1012:	8d 85       	ldd	r24, Y+13	; 0x0d
    1014:	9e 85       	ldd	r25, Y+14	; 0x0e
    1016:	af 85       	ldd	r26, Y+15	; 0x0f
    1018:	b8 89       	ldd	r27, Y+16	; 0x10
    101a:	2a 85       	ldd	r18, Y+10	; 0x0a
    101c:	ac 01       	movw	r20, r24
    101e:	bd 01       	movw	r22, r26
    1020:	8a e0       	ldi	r24, 0x0A	; 10
    1022:	0e 94 be 05 	call	0xb7c	; 0xb7c <OLED_DisplayNumber>
    1026:	a2 c0       	rjmp	.+324    	; 0x116c <OLED_Printf+0x342>
    1028:	8f 89       	ldd	r24, Y+23	; 0x17
    102a:	98 8d       	ldd	r25, Y+24	; 0x18
    102c:	9c 01       	movw	r18, r24
    102e:	2e 5f       	subi	r18, 0xFE	; 254
    1030:	3f 4f       	sbci	r19, 0xFF	; 255
    1032:	38 8f       	std	Y+24, r19	; 0x18
    1034:	2f 8b       	std	Y+23, r18	; 0x17
    1036:	fc 01       	movw	r30, r24
    1038:	80 81       	ld	r24, Z
    103a:	91 81       	ldd	r25, Z+1	; 0x01
    103c:	9c 87       	std	Y+12, r25	; 0x0c
    103e:	8b 87       	std	Y+11, r24	; 0x0b
    1040:	8b 85       	ldd	r24, Y+11	; 0x0b
    1042:	9c 85       	ldd	r25, Y+12	; 0x0c
    1044:	cc 01       	movw	r24, r24
    1046:	a0 e0       	ldi	r26, 0x00	; 0
    1048:	b0 e0       	ldi	r27, 0x00	; 0
    104a:	2a 85       	ldd	r18, Y+10	; 0x0a
    104c:	ac 01       	movw	r20, r24
    104e:	bd 01       	movw	r22, r26
    1050:	80 e1       	ldi	r24, 0x10	; 16
    1052:	0e 94 be 05 	call	0xb7c	; 0xb7c <OLED_DisplayNumber>
    1056:	8a c0       	rjmp	.+276    	; 0x116c <OLED_Printf+0x342>
    1058:	8f 89       	ldd	r24, Y+23	; 0x17
    105a:	98 8d       	ldd	r25, Y+24	; 0x18
    105c:	9c 01       	movw	r18, r24
    105e:	2c 5f       	subi	r18, 0xFC	; 252
    1060:	3f 4f       	sbci	r19, 0xFF	; 255
    1062:	38 8f       	std	Y+24, r19	; 0x18
    1064:	2f 8b       	std	Y+23, r18	; 0x17
    1066:	fc 01       	movw	r30, r24
    1068:	80 81       	ld	r24, Z
    106a:	91 81       	ldd	r25, Z+1	; 0x01
    106c:	a2 81       	ldd	r26, Z+2	; 0x02
    106e:	b3 81       	ldd	r27, Z+3	; 0x03
    1070:	8d 87       	std	Y+13, r24	; 0x0d
    1072:	9e 87       	std	Y+14, r25	; 0x0e
    1074:	af 87       	std	Y+15, r26	; 0x0f
    1076:	b8 8b       	std	Y+16, r27	; 0x10
    1078:	8d 85       	ldd	r24, Y+13	; 0x0d
    107a:	9e 85       	ldd	r25, Y+14	; 0x0e
    107c:	af 85       	ldd	r26, Y+15	; 0x0f
    107e:	b8 89       	ldd	r27, Y+16	; 0x10
    1080:	2a 85       	ldd	r18, Y+10	; 0x0a
    1082:	ac 01       	movw	r20, r24
    1084:	bd 01       	movw	r22, r26
    1086:	80 e1       	ldi	r24, 0x10	; 16
    1088:	0e 94 be 05 	call	0xb7c	; 0xb7c <OLED_DisplayNumber>
    108c:	6f c0       	rjmp	.+222    	; 0x116c <OLED_Printf+0x342>
    108e:	8f 89       	ldd	r24, Y+23	; 0x17
    1090:	98 8d       	ldd	r25, Y+24	; 0x18
    1092:	9c 01       	movw	r18, r24
    1094:	2e 5f       	subi	r18, 0xFE	; 254
    1096:	3f 4f       	sbci	r19, 0xFF	; 255
    1098:	38 8f       	std	Y+24, r19	; 0x18
    109a:	2f 8b       	std	Y+23, r18	; 0x17
    109c:	fc 01       	movw	r30, r24
    109e:	80 81       	ld	r24, Z
    10a0:	91 81       	ldd	r25, Z+1	; 0x01
    10a2:	9c 87       	std	Y+12, r25	; 0x0c
    10a4:	8b 87       	std	Y+11, r24	; 0x0b
    10a6:	8a 85       	ldd	r24, Y+10	; 0x0a
    10a8:	8f 3f       	cpi	r24, 0xFF	; 255
    10aa:	11 f4       	brne	.+4      	; 0x10b0 <OLED_Printf+0x286>
    10ac:	80 e1       	ldi	r24, 0x10	; 16
    10ae:	8a 87       	std	Y+10, r24	; 0x0a
    10b0:	8b 85       	ldd	r24, Y+11	; 0x0b
    10b2:	9c 85       	ldd	r25, Y+12	; 0x0c
    10b4:	cc 01       	movw	r24, r24
    10b6:	a0 e0       	ldi	r26, 0x00	; 0
    10b8:	b0 e0       	ldi	r27, 0x00	; 0
    10ba:	2a 85       	ldd	r18, Y+10	; 0x0a
    10bc:	ac 01       	movw	r20, r24
    10be:	bd 01       	movw	r22, r26
    10c0:	82 e0       	ldi	r24, 0x02	; 2
    10c2:	0e 94 be 05 	call	0xb7c	; 0xb7c <OLED_DisplayNumber>
    10c6:	52 c0       	rjmp	.+164    	; 0x116c <OLED_Printf+0x342>
    10c8:	8f 89       	ldd	r24, Y+23	; 0x17
    10ca:	98 8d       	ldd	r25, Y+24	; 0x18
    10cc:	9c 01       	movw	r18, r24
    10ce:	2c 5f       	subi	r18, 0xFC	; 252
    10d0:	3f 4f       	sbci	r19, 0xFF	; 255
    10d2:	38 8f       	std	Y+24, r19	; 0x18
    10d4:	2f 8b       	std	Y+23, r18	; 0x17
    10d6:	fc 01       	movw	r30, r24
    10d8:	80 81       	ld	r24, Z
    10da:	91 81       	ldd	r25, Z+1	; 0x01
    10dc:	a2 81       	ldd	r26, Z+2	; 0x02
    10de:	b3 81       	ldd	r27, Z+3	; 0x03
    10e0:	8d 87       	std	Y+13, r24	; 0x0d
    10e2:	9e 87       	std	Y+14, r25	; 0x0e
    10e4:	af 87       	std	Y+15, r26	; 0x0f
    10e6:	b8 8b       	std	Y+16, r27	; 0x10
    10e8:	8a 85       	ldd	r24, Y+10	; 0x0a
    10ea:	8f 3f       	cpi	r24, 0xFF	; 255
    10ec:	11 f4       	brne	.+4      	; 0x10f2 <OLED_Printf+0x2c8>
    10ee:	80 e1       	ldi	r24, 0x10	; 16
    10f0:	8a 87       	std	Y+10, r24	; 0x0a
    10f2:	8d 85       	ldd	r24, Y+13	; 0x0d
    10f4:	9e 85       	ldd	r25, Y+14	; 0x0e
    10f6:	af 85       	ldd	r26, Y+15	; 0x0f
    10f8:	b8 89       	ldd	r27, Y+16	; 0x10
    10fa:	2a 85       	ldd	r18, Y+10	; 0x0a
    10fc:	ac 01       	movw	r20, r24
    10fe:	bd 01       	movw	r22, r26
    1100:	82 e0       	ldi	r24, 0x02	; 2
    1102:	0e 94 be 05 	call	0xb7c	; 0xb7c <OLED_DisplayNumber>
    1106:	32 c0       	rjmp	.+100    	; 0x116c <OLED_Printf+0x342>
    1108:	8f 89       	ldd	r24, Y+23	; 0x17
    110a:	98 8d       	ldd	r25, Y+24	; 0x18
    110c:	9c 01       	movw	r18, r24
    110e:	2c 5f       	subi	r18, 0xFC	; 252
    1110:	3f 4f       	sbci	r19, 0xFF	; 255
    1112:	38 8f       	std	Y+24, r19	; 0x18
    1114:	2f 8b       	std	Y+23, r18	; 0x17
    1116:	fc 01       	movw	r30, r24
    1118:	80 81       	ld	r24, Z
    111a:	91 81       	ldd	r25, Z+1	; 0x01
    111c:	a2 81       	ldd	r26, Z+2	; 0x02
    111e:	b3 81       	ldd	r27, Z+3	; 0x03
    1120:	89 8b       	std	Y+17, r24	; 0x11
    1122:	9a 8b       	std	Y+18, r25	; 0x12
    1124:	ab 8b       	std	Y+19, r26	; 0x13
    1126:	bc 8b       	std	Y+20, r27	; 0x14
    1128:	89 89       	ldd	r24, Y+17	; 0x11
    112a:	9a 89       	ldd	r25, Y+18	; 0x12
    112c:	ab 89       	ldd	r26, Y+19	; 0x13
    112e:	bc 89       	ldd	r27, Y+20	; 0x14
    1130:	bc 01       	movw	r22, r24
    1132:	cd 01       	movw	r24, r26
    1134:	0e 94 ae 06 	call	0xd5c	; 0xd5c <OLED_DisplayFloatNumber>
    1138:	19 c0       	rjmp	.+50     	; 0x116c <OLED_Printf+0x342>
    113a:	8f 89       	ldd	r24, Y+23	; 0x17
    113c:	98 8d       	ldd	r25, Y+24	; 0x18
    113e:	9c 01       	movw	r18, r24
    1140:	2e 5f       	subi	r18, 0xFE	; 254
    1142:	3f 4f       	sbci	r19, 0xFF	; 255
    1144:	38 8f       	std	Y+24, r19	; 0x18
    1146:	2f 8b       	std	Y+23, r18	; 0x17
    1148:	fc 01       	movw	r30, r24
    114a:	80 81       	ld	r24, Z
    114c:	91 81       	ldd	r25, Z+1	; 0x01
    114e:	9e 8b       	std	Y+22, r25	; 0x16
    1150:	8d 8b       	std	Y+21, r24	; 0x15
    1152:	8d 89       	ldd	r24, Y+21	; 0x15
    1154:	9e 89       	ldd	r25, Y+22	; 0x16
    1156:	0e 94 9f 05 	call	0xb3e	; 0xb3e <OLED_DisplayString>
    115a:	08 c0       	rjmp	.+16     	; 0x116c <OLED_Printf+0x342>
    115c:	85 e2       	ldi	r24, 0x25	; 37
    115e:	0e 94 52 05 	call	0xaa4	; 0xaa4 <OLED_DisplayChar>
    1162:	00 00       	nop
    1164:	03 c0       	rjmp	.+6      	; 0x116c <OLED_Printf+0x342>
    1166:	89 85       	ldd	r24, Y+9	; 0x09
    1168:	0e 94 52 05 	call	0xaa4	; 0xaa4 <OLED_DisplayChar>
    116c:	89 81       	ldd	r24, Y+1	; 0x01
    116e:	9a 81       	ldd	r25, Y+2	; 0x02
    1170:	01 96       	adiw	r24, 0x01	; 1
    1172:	9a 83       	std	Y+2, r25	; 0x02
    1174:	89 83       	std	Y+1, r24	; 0x01
    1176:	89 81       	ldd	r24, Y+1	; 0x01
    1178:	9a 81       	ldd	r25, Y+2	; 0x02
    117a:	fc 01       	movw	r30, r24
    117c:	80 81       	ld	r24, Z
    117e:	88 23       	and	r24, r24
    1180:	09 f0       	breq	.+2      	; 0x1184 <OLED_Printf+0x35a>
    1182:	66 ce       	rjmp	.-820    	; 0xe50 <OLED_Printf+0x26>
    1184:	00 00       	nop
    1186:	68 96       	adiw	r28, 0x18	; 24
    1188:	0f b6       	in	r0, 0x3f	; 63
    118a:	f8 94       	cli
    118c:	de bf       	out	0x3e, r29	; 62
    118e:	0f be       	out	0x3f, r0	; 63
    1190:	cd bf       	out	0x3d, r28	; 61
    1192:	df 91       	pop	r29
    1194:	cf 91       	pop	r28
    1196:	08 95       	ret

00001198 <OLED_Clear>:
    1198:	cf 93       	push	r28
    119a:	df 93       	push	r29
    119c:	00 d0       	rcall	.+0      	; 0x119e <OLED_Clear+0x6>
    119e:	cd b7       	in	r28, 0x3d	; 61
    11a0:	de b7       	in	r29, 0x3e	; 62
    11a2:	81 e2       	ldi	r24, 0x21	; 33
    11a4:	0e 94 87 09 	call	0x130e	; 0x130e <oledSendCommand>
    11a8:	80 e0       	ldi	r24, 0x00	; 0
    11aa:	0e 94 87 09 	call	0x130e	; 0x130e <oledSendCommand>
    11ae:	8f e7       	ldi	r24, 0x7F	; 127
    11b0:	0e 94 87 09 	call	0x130e	; 0x130e <oledSendCommand>
    11b4:	82 e2       	ldi	r24, 0x22	; 34
    11b6:	0e 94 87 09 	call	0x130e	; 0x130e <oledSendCommand>
    11ba:	80 e0       	ldi	r24, 0x00	; 0
    11bc:	0e 94 87 09 	call	0x130e	; 0x130e <oledSendCommand>
    11c0:	87 e0       	ldi	r24, 0x07	; 7
    11c2:	0e 94 87 09 	call	0x130e	; 0x130e <oledSendCommand>
    11c6:	88 e7       	ldi	r24, 0x78	; 120
    11c8:	0e 94 5f 09 	call	0x12be	; 0x12be <oledSendStart>
    11cc:	80 e4       	ldi	r24, 0x40	; 64
    11ce:	0e 94 79 09 	call	0x12f2	; 0x12f2 <oledSendByte>
    11d2:	1a 82       	std	Y+2, r1	; 0x02
    11d4:	19 82       	std	Y+1, r1	; 0x01
    11d6:	08 c0       	rjmp	.+16     	; 0x11e8 <OLED_Clear+0x50>
    11d8:	80 e0       	ldi	r24, 0x00	; 0
    11da:	0e 94 79 09 	call	0x12f2	; 0x12f2 <oledSendByte>
    11de:	89 81       	ldd	r24, Y+1	; 0x01
    11e0:	9a 81       	ldd	r25, Y+2	; 0x02
    11e2:	01 96       	adiw	r24, 0x01	; 1
    11e4:	9a 83       	std	Y+2, r25	; 0x02
    11e6:	89 83       	std	Y+1, r24	; 0x01
    11e8:	89 81       	ldd	r24, Y+1	; 0x01
    11ea:	9a 81       	ldd	r25, Y+2	; 0x02
    11ec:	81 15       	cp	r24, r1
    11ee:	94 40       	sbci	r25, 0x04	; 4
    11f0:	9c f3       	brlt	.-26     	; 0x11d8 <OLED_Clear+0x40>
    11f2:	81 e2       	ldi	r24, 0x21	; 33
    11f4:	0e 94 87 09 	call	0x130e	; 0x130e <oledSendCommand>
    11f8:	80 e0       	ldi	r24, 0x00	; 0
    11fa:	0e 94 87 09 	call	0x130e	; 0x130e <oledSendCommand>
    11fe:	8f e7       	ldi	r24, 0x7F	; 127
    1200:	0e 94 87 09 	call	0x130e	; 0x130e <oledSendCommand>
    1204:	82 e2       	ldi	r24, 0x22	; 34
    1206:	0e 94 87 09 	call	0x130e	; 0x130e <oledSendCommand>
    120a:	80 e0       	ldi	r24, 0x00	; 0
    120c:	0e 94 87 09 	call	0x130e	; 0x130e <oledSendCommand>
    1210:	87 e0       	ldi	r24, 0x07	; 7
    1212:	0e 94 87 09 	call	0x130e	; 0x130e <oledSendCommand>
    1216:	88 e7       	ldi	r24, 0x78	; 120
    1218:	0e 94 5f 09 	call	0x12be	; 0x12be <oledSendStart>
    121c:	80 e4       	ldi	r24, 0x40	; 64
    121e:	0e 94 79 09 	call	0x12f2	; 0x12f2 <oledSendByte>
    1222:	00 00       	nop
    1224:	0f 90       	pop	r0
    1226:	0f 90       	pop	r0
    1228:	df 91       	pop	r29
    122a:	cf 91       	pop	r28
    122c:	08 95       	ret

0000122e <OLED_GoToNextLine>:
    122e:	cf 93       	push	r28
    1230:	df 93       	push	r29
    1232:	cd b7       	in	r28, 0x3d	; 61
    1234:	de b7       	in	r29, 0x3e	; 62
    1236:	80 91 2b 03 	lds	r24, 0x032B	; 0x80032b <OledLineNum>
    123a:	8f 5f       	subi	r24, 0xFF	; 255
    123c:	80 93 2b 03 	sts	0x032B, r24	; 0x80032b <OledLineNum>
    1240:	80 91 2b 03 	lds	r24, 0x032B	; 0x80032b <OledLineNum>
    1244:	87 70       	andi	r24, 0x07	; 7
    1246:	80 93 2b 03 	sts	0x032B, r24	; 0x80032b <OledLineNum>
    124a:	80 91 2b 03 	lds	r24, 0x032B	; 0x80032b <OledLineNum>
    124e:	60 e0       	ldi	r22, 0x00	; 0
    1250:	0e 94 2e 09 	call	0x125c	; 0x125c <OLED_SetCursor>
    1254:	00 00       	nop
    1256:	df 91       	pop	r29
    1258:	cf 91       	pop	r28
    125a:	08 95       	ret

0000125c <OLED_SetCursor>:
    125c:	cf 93       	push	r28
    125e:	df 93       	push	r29
    1260:	00 d0       	rcall	.+0      	; 0x1262 <OLED_SetCursor+0x6>
    1262:	cd b7       	in	r28, 0x3d	; 61
    1264:	de b7       	in	r29, 0x3e	; 62
    1266:	89 83       	std	Y+1, r24	; 0x01
    1268:	6a 83       	std	Y+2, r22	; 0x02
    126a:	89 81       	ldd	r24, Y+1	; 0x01
    126c:	88 30       	cpi	r24, 0x08	; 8
    126e:	08 f5       	brcc	.+66     	; 0x12b2 <OLED_SetCursor+0x56>
    1270:	8a 81       	ldd	r24, Y+2	; 0x02
    1272:	88 23       	and	r24, r24
    1274:	f4 f0       	brlt	.+60     	; 0x12b2 <OLED_SetCursor+0x56>
    1276:	89 81       	ldd	r24, Y+1	; 0x01
    1278:	80 93 2b 03 	sts	0x032B, r24	; 0x80032b <OledLineNum>
    127c:	8a 81       	ldd	r24, Y+2	; 0x02
    127e:	80 93 2c 03 	sts	0x032C, r24	; 0x80032c <OledCursorPos>
    1282:	81 e2       	ldi	r24, 0x21	; 33
    1284:	0e 94 87 09 	call	0x130e	; 0x130e <oledSendCommand>
    1288:	8a 81       	ldd	r24, Y+2	; 0x02
    128a:	0e 94 87 09 	call	0x130e	; 0x130e <oledSendCommand>
    128e:	8f e7       	ldi	r24, 0x7F	; 127
    1290:	0e 94 87 09 	call	0x130e	; 0x130e <oledSendCommand>
    1294:	82 e2       	ldi	r24, 0x22	; 34
    1296:	0e 94 87 09 	call	0x130e	; 0x130e <oledSendCommand>
    129a:	89 81       	ldd	r24, Y+1	; 0x01
    129c:	0e 94 87 09 	call	0x130e	; 0x130e <oledSendCommand>
    12a0:	87 e0       	ldi	r24, 0x07	; 7
    12a2:	0e 94 87 09 	call	0x130e	; 0x130e <oledSendCommand>
    12a6:	88 e7       	ldi	r24, 0x78	; 120
    12a8:	0e 94 5f 09 	call	0x12be	; 0x12be <oledSendStart>
    12ac:	80 e4       	ldi	r24, 0x40	; 64
    12ae:	0e 94 79 09 	call	0x12f2	; 0x12f2 <oledSendByte>
    12b2:	00 00       	nop
    12b4:	0f 90       	pop	r0
    12b6:	0f 90       	pop	r0
    12b8:	df 91       	pop	r29
    12ba:	cf 91       	pop	r28
    12bc:	08 95       	ret

000012be <oledSendStart>:

/********************************************************************************
 Local FUnctions for sending the command/data
 ********************************************************************************/

void oledSendStart(uint8_t address){
    12be:	cf 93       	push	r28
    12c0:	df 93       	push	r29
    12c2:	1f 92       	push	r1
    12c4:	cd b7       	in	r28, 0x3d	; 61
    12c6:	de b7       	in	r29, 0x3e	; 62
    12c8:	89 83       	std	Y+1, r24	; 0x01

    
    i2c_tx_start();
    12ca:	0e 94 8a 01 	call	0x314	; 0x314 <i2c_tx_start>
    i2c_tx_address(address);
    12ce:	89 81       	ldd	r24, Y+1	; 0x01
    12d0:	0e 94 94 01 	call	0x328	; 0x328 <i2c_tx_address>
}
    12d4:	00 00       	nop
    12d6:	0f 90       	pop	r0
    12d8:	df 91       	pop	r29
    12da:	cf 91       	pop	r28
    12dc:	08 95       	ret

000012de <oledSendStop>:


void oledSendStop(void){
    12de:	cf 93       	push	r28
    12e0:	df 93       	push	r29
    12e2:	cd b7       	in	r28, 0x3d	; 61
    12e4:	de b7       	in	r29, 0x3e	; 62

    i2c_tx_stop();
    12e6:	0e 94 b0 01 	call	0x360	; 0x360 <i2c_tx_stop>
}
    12ea:	00 00       	nop
    12ec:	df 91       	pop	r29
    12ee:	cf 91       	pop	r28
    12f0:	08 95       	ret

000012f2 <oledSendByte>:





void oledSendByte(uint8_t ch){
    12f2:	cf 93       	push	r28
    12f4:	df 93       	push	r29
    12f6:	1f 92       	push	r1
    12f8:	cd b7       	in	r28, 0x3d	; 61
    12fa:	de b7       	in	r29, 0x3e	; 62
    12fc:	89 83       	std	Y+1, r24	; 0x01

    
    i2c_tx_byte(ch);
    12fe:	89 81       	ldd	r24, Y+1	; 0x01
    1300:	0e 94 a2 01 	call	0x344	; 0x344 <i2c_tx_byte>
    
}
    1304:	00 00       	nop
    1306:	0f 90       	pop	r0
    1308:	df 91       	pop	r29
    130a:	cf 91       	pop	r28
    130c:	08 95       	ret

0000130e <oledSendCommand>:


void oledSendCommand(uint8_t cmd){
    130e:	cf 93       	push	r28
    1310:	df 93       	push	r29
    1312:	1f 92       	push	r1
    1314:	cd b7       	in	r28, 0x3d	; 61
    1316:	de b7       	in	r29, 0x3e	; 62
    1318:	89 83       	std	Y+1, r24	; 0x01
    //oledSendStart(SSD1306_ADDRESS<<1);
    oledSendStart(SSD1306_ADDRESS);
    131a:	88 e7       	ldi	r24, 0x78	; 120
    131c:	0e 94 5f 09 	call	0x12be	; 0x12be <oledSendStart>
    oledSendByte(SSD1306_COMMAND);
    1320:	80 e0       	ldi	r24, 0x00	; 0
    1322:	0e 94 79 09 	call	0x12f2	; 0x12f2 <oledSendByte>
    oledSendByte(cmd);
    1326:	89 81       	ldd	r24, Y+1	; 0x01
    1328:	0e 94 79 09 	call	0x12f2	; 0x12f2 <oledSendByte>
    oledSendStop();
    132c:	0e 94 6f 09 	call	0x12de	; 0x12de <oledSendStop>
}
    1330:	00 00       	nop
    1332:	0f 90       	pop	r0
    1334:	df 91       	pop	r29
    1336:	cf 91       	pop	r28
    1338:	08 95       	ret

0000133a <__subsf3>:
    133a:	50 58       	subi	r21, 0x80	; 128

0000133c <__addsf3>:
    133c:	bb 27       	eor	r27, r27
    133e:	aa 27       	eor	r26, r26
    1340:	0e 94 b5 09 	call	0x136a	; 0x136a <__addsf3x>
    1344:	0c 94 2f 0b 	jmp	0x165e	; 0x165e <__fp_round>
    1348:	0e 94 21 0b 	call	0x1642	; 0x1642 <__fp_pscA>
    134c:	38 f0       	brcs	.+14     	; 0x135c <__addsf3+0x20>
    134e:	0e 94 28 0b 	call	0x1650	; 0x1650 <__fp_pscB>
    1352:	20 f0       	brcs	.+8      	; 0x135c <__addsf3+0x20>
    1354:	39 f4       	brne	.+14     	; 0x1364 <__addsf3+0x28>
    1356:	9f 3f       	cpi	r25, 0xFF	; 255
    1358:	19 f4       	brne	.+6      	; 0x1360 <__addsf3+0x24>
    135a:	26 f4       	brtc	.+8      	; 0x1364 <__addsf3+0x28>
    135c:	0c 94 1e 0b 	jmp	0x163c	; 0x163c <__fp_nan>
    1360:	0e f4       	brtc	.+2      	; 0x1364 <__addsf3+0x28>
    1362:	e0 95       	com	r30
    1364:	e7 fb       	bst	r30, 7
    1366:	0c 94 18 0b 	jmp	0x1630	; 0x1630 <__fp_inf>

0000136a <__addsf3x>:
    136a:	e9 2f       	mov	r30, r25
    136c:	0e 94 40 0b 	call	0x1680	; 0x1680 <__fp_split3>
    1370:	58 f3       	brcs	.-42     	; 0x1348 <__addsf3+0xc>
    1372:	ba 17       	cp	r27, r26
    1374:	62 07       	cpc	r22, r18
    1376:	73 07       	cpc	r23, r19
    1378:	84 07       	cpc	r24, r20
    137a:	95 07       	cpc	r25, r21
    137c:	20 f0       	brcs	.+8      	; 0x1386 <__addsf3x+0x1c>
    137e:	79 f4       	brne	.+30     	; 0x139e <__addsf3x+0x34>
    1380:	a6 f5       	brtc	.+104    	; 0x13ea <__addsf3x+0x80>
    1382:	0c 94 62 0b 	jmp	0x16c4	; 0x16c4 <__fp_zero>
    1386:	0e f4       	brtc	.+2      	; 0x138a <__addsf3x+0x20>
    1388:	e0 95       	com	r30
    138a:	0b 2e       	mov	r0, r27
    138c:	ba 2f       	mov	r27, r26
    138e:	a0 2d       	mov	r26, r0
    1390:	0b 01       	movw	r0, r22
    1392:	b9 01       	movw	r22, r18
    1394:	90 01       	movw	r18, r0
    1396:	0c 01       	movw	r0, r24
    1398:	ca 01       	movw	r24, r20
    139a:	a0 01       	movw	r20, r0
    139c:	11 24       	eor	r1, r1
    139e:	ff 27       	eor	r31, r31
    13a0:	59 1b       	sub	r21, r25
    13a2:	99 f0       	breq	.+38     	; 0x13ca <__addsf3x+0x60>
    13a4:	59 3f       	cpi	r21, 0xF9	; 249
    13a6:	50 f4       	brcc	.+20     	; 0x13bc <__addsf3x+0x52>
    13a8:	50 3e       	cpi	r21, 0xE0	; 224
    13aa:	68 f1       	brcs	.+90     	; 0x1406 <__addsf3x+0x9c>
    13ac:	1a 16       	cp	r1, r26
    13ae:	f0 40       	sbci	r31, 0x00	; 0
    13b0:	a2 2f       	mov	r26, r18
    13b2:	23 2f       	mov	r18, r19
    13b4:	34 2f       	mov	r19, r20
    13b6:	44 27       	eor	r20, r20
    13b8:	58 5f       	subi	r21, 0xF8	; 248
    13ba:	f3 cf       	rjmp	.-26     	; 0x13a2 <__addsf3x+0x38>
    13bc:	46 95       	lsr	r20
    13be:	37 95       	ror	r19
    13c0:	27 95       	ror	r18
    13c2:	a7 95       	ror	r26
    13c4:	f0 40       	sbci	r31, 0x00	; 0
    13c6:	53 95       	inc	r21
    13c8:	c9 f7       	brne	.-14     	; 0x13bc <__addsf3x+0x52>
    13ca:	7e f4       	brtc	.+30     	; 0x13ea <__addsf3x+0x80>
    13cc:	1f 16       	cp	r1, r31
    13ce:	ba 0b       	sbc	r27, r26
    13d0:	62 0b       	sbc	r22, r18
    13d2:	73 0b       	sbc	r23, r19
    13d4:	84 0b       	sbc	r24, r20
    13d6:	ba f0       	brmi	.+46     	; 0x1406 <__addsf3x+0x9c>
    13d8:	91 50       	subi	r25, 0x01	; 1
    13da:	a1 f0       	breq	.+40     	; 0x1404 <__addsf3x+0x9a>
    13dc:	ff 0f       	add	r31, r31
    13de:	bb 1f       	adc	r27, r27
    13e0:	66 1f       	adc	r22, r22
    13e2:	77 1f       	adc	r23, r23
    13e4:	88 1f       	adc	r24, r24
    13e6:	c2 f7       	brpl	.-16     	; 0x13d8 <__addsf3x+0x6e>
    13e8:	0e c0       	rjmp	.+28     	; 0x1406 <__addsf3x+0x9c>
    13ea:	ba 0f       	add	r27, r26
    13ec:	62 1f       	adc	r22, r18
    13ee:	73 1f       	adc	r23, r19
    13f0:	84 1f       	adc	r24, r20
    13f2:	48 f4       	brcc	.+18     	; 0x1406 <__addsf3x+0x9c>
    13f4:	87 95       	ror	r24
    13f6:	77 95       	ror	r23
    13f8:	67 95       	ror	r22
    13fa:	b7 95       	ror	r27
    13fc:	f7 95       	ror	r31
    13fe:	9e 3f       	cpi	r25, 0xFE	; 254
    1400:	08 f0       	brcs	.+2      	; 0x1404 <__addsf3x+0x9a>
    1402:	b0 cf       	rjmp	.-160    	; 0x1364 <__addsf3+0x28>
    1404:	93 95       	inc	r25
    1406:	88 0f       	add	r24, r24
    1408:	08 f0       	brcs	.+2      	; 0x140c <__addsf3x+0xa2>
    140a:	99 27       	eor	r25, r25
    140c:	ee 0f       	add	r30, r30
    140e:	97 95       	ror	r25
    1410:	87 95       	ror	r24
    1412:	08 95       	ret

00001414 <__cmpsf2>:
    1414:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <__fp_cmp>
    1418:	08 f4       	brcc	.+2      	; 0x141c <__cmpsf2+0x8>
    141a:	81 e0       	ldi	r24, 0x01	; 1
    141c:	08 95       	ret

0000141e <__divsf3>:
    141e:	0e 94 23 0a 	call	0x1446	; 0x1446 <__divsf3x>
    1422:	0c 94 2f 0b 	jmp	0x165e	; 0x165e <__fp_round>
    1426:	0e 94 28 0b 	call	0x1650	; 0x1650 <__fp_pscB>
    142a:	58 f0       	brcs	.+22     	; 0x1442 <__divsf3+0x24>
    142c:	0e 94 21 0b 	call	0x1642	; 0x1642 <__fp_pscA>
    1430:	40 f0       	brcs	.+16     	; 0x1442 <__divsf3+0x24>
    1432:	29 f4       	brne	.+10     	; 0x143e <__divsf3+0x20>
    1434:	5f 3f       	cpi	r21, 0xFF	; 255
    1436:	29 f0       	breq	.+10     	; 0x1442 <__divsf3+0x24>
    1438:	0c 94 18 0b 	jmp	0x1630	; 0x1630 <__fp_inf>
    143c:	51 11       	cpse	r21, r1
    143e:	0c 94 63 0b 	jmp	0x16c6	; 0x16c6 <__fp_szero>
    1442:	0c 94 1e 0b 	jmp	0x163c	; 0x163c <__fp_nan>

00001446 <__divsf3x>:
    1446:	0e 94 40 0b 	call	0x1680	; 0x1680 <__fp_split3>
    144a:	68 f3       	brcs	.-38     	; 0x1426 <__divsf3+0x8>

0000144c <__divsf3_pse>:
    144c:	99 23       	and	r25, r25
    144e:	b1 f3       	breq	.-20     	; 0x143c <__divsf3+0x1e>
    1450:	55 23       	and	r21, r21
    1452:	91 f3       	breq	.-28     	; 0x1438 <__divsf3+0x1a>
    1454:	95 1b       	sub	r25, r21
    1456:	55 0b       	sbc	r21, r21
    1458:	bb 27       	eor	r27, r27
    145a:	aa 27       	eor	r26, r26
    145c:	62 17       	cp	r22, r18
    145e:	73 07       	cpc	r23, r19
    1460:	84 07       	cpc	r24, r20
    1462:	38 f0       	brcs	.+14     	; 0x1472 <__divsf3_pse+0x26>
    1464:	9f 5f       	subi	r25, 0xFF	; 255
    1466:	5f 4f       	sbci	r21, 0xFF	; 255
    1468:	22 0f       	add	r18, r18
    146a:	33 1f       	adc	r19, r19
    146c:	44 1f       	adc	r20, r20
    146e:	aa 1f       	adc	r26, r26
    1470:	a9 f3       	breq	.-22     	; 0x145c <__divsf3_pse+0x10>
    1472:	35 d0       	rcall	.+106    	; 0x14de <__divsf3_pse+0x92>
    1474:	0e 2e       	mov	r0, r30
    1476:	3a f0       	brmi	.+14     	; 0x1486 <__divsf3_pse+0x3a>
    1478:	e0 e8       	ldi	r30, 0x80	; 128
    147a:	32 d0       	rcall	.+100    	; 0x14e0 <__divsf3_pse+0x94>
    147c:	91 50       	subi	r25, 0x01	; 1
    147e:	50 40       	sbci	r21, 0x00	; 0
    1480:	e6 95       	lsr	r30
    1482:	00 1c       	adc	r0, r0
    1484:	ca f7       	brpl	.-14     	; 0x1478 <__divsf3_pse+0x2c>
    1486:	2b d0       	rcall	.+86     	; 0x14de <__divsf3_pse+0x92>
    1488:	fe 2f       	mov	r31, r30
    148a:	29 d0       	rcall	.+82     	; 0x14de <__divsf3_pse+0x92>
    148c:	66 0f       	add	r22, r22
    148e:	77 1f       	adc	r23, r23
    1490:	88 1f       	adc	r24, r24
    1492:	bb 1f       	adc	r27, r27
    1494:	26 17       	cp	r18, r22
    1496:	37 07       	cpc	r19, r23
    1498:	48 07       	cpc	r20, r24
    149a:	ab 07       	cpc	r26, r27
    149c:	b0 e8       	ldi	r27, 0x80	; 128
    149e:	09 f0       	breq	.+2      	; 0x14a2 <__divsf3_pse+0x56>
    14a0:	bb 0b       	sbc	r27, r27
    14a2:	80 2d       	mov	r24, r0
    14a4:	bf 01       	movw	r22, r30
    14a6:	ff 27       	eor	r31, r31
    14a8:	93 58       	subi	r25, 0x83	; 131
    14aa:	5f 4f       	sbci	r21, 0xFF	; 255
    14ac:	3a f0       	brmi	.+14     	; 0x14bc <__divsf3_pse+0x70>
    14ae:	9e 3f       	cpi	r25, 0xFE	; 254
    14b0:	51 05       	cpc	r21, r1
    14b2:	78 f0       	brcs	.+30     	; 0x14d2 <__divsf3_pse+0x86>
    14b4:	0c 94 18 0b 	jmp	0x1630	; 0x1630 <__fp_inf>
    14b8:	0c 94 63 0b 	jmp	0x16c6	; 0x16c6 <__fp_szero>
    14bc:	5f 3f       	cpi	r21, 0xFF	; 255
    14be:	e4 f3       	brlt	.-8      	; 0x14b8 <__divsf3_pse+0x6c>
    14c0:	98 3e       	cpi	r25, 0xE8	; 232
    14c2:	d4 f3       	brlt	.-12     	; 0x14b8 <__divsf3_pse+0x6c>
    14c4:	86 95       	lsr	r24
    14c6:	77 95       	ror	r23
    14c8:	67 95       	ror	r22
    14ca:	b7 95       	ror	r27
    14cc:	f7 95       	ror	r31
    14ce:	9f 5f       	subi	r25, 0xFF	; 255
    14d0:	c9 f7       	brne	.-14     	; 0x14c4 <__divsf3_pse+0x78>
    14d2:	88 0f       	add	r24, r24
    14d4:	91 1d       	adc	r25, r1
    14d6:	96 95       	lsr	r25
    14d8:	87 95       	ror	r24
    14da:	97 f9       	bld	r25, 7
    14dc:	08 95       	ret
    14de:	e1 e0       	ldi	r30, 0x01	; 1
    14e0:	66 0f       	add	r22, r22
    14e2:	77 1f       	adc	r23, r23
    14e4:	88 1f       	adc	r24, r24
    14e6:	bb 1f       	adc	r27, r27
    14e8:	62 17       	cp	r22, r18
    14ea:	73 07       	cpc	r23, r19
    14ec:	84 07       	cpc	r24, r20
    14ee:	ba 07       	cpc	r27, r26
    14f0:	20 f0       	brcs	.+8      	; 0x14fa <__divsf3_pse+0xae>
    14f2:	62 1b       	sub	r22, r18
    14f4:	73 0b       	sbc	r23, r19
    14f6:	84 0b       	sbc	r24, r20
    14f8:	ba 0b       	sbc	r27, r26
    14fa:	ee 1f       	adc	r30, r30
    14fc:	88 f7       	brcc	.-30     	; 0x14e0 <__divsf3_pse+0x94>
    14fe:	e0 95       	com	r30
    1500:	08 95       	ret

00001502 <__fixsfsi>:
    1502:	0e 94 88 0a 	call	0x1510	; 0x1510 <__fixunssfsi>
    1506:	68 94       	set
    1508:	b1 11       	cpse	r27, r1
    150a:	0c 94 63 0b 	jmp	0x16c6	; 0x16c6 <__fp_szero>
    150e:	08 95       	ret

00001510 <__fixunssfsi>:
    1510:	0e 94 48 0b 	call	0x1690	; 0x1690 <__fp_splitA>
    1514:	88 f0       	brcs	.+34     	; 0x1538 <__fixunssfsi+0x28>
    1516:	9f 57       	subi	r25, 0x7F	; 127
    1518:	98 f0       	brcs	.+38     	; 0x1540 <__fixunssfsi+0x30>
    151a:	b9 2f       	mov	r27, r25
    151c:	99 27       	eor	r25, r25
    151e:	b7 51       	subi	r27, 0x17	; 23
    1520:	b0 f0       	brcs	.+44     	; 0x154e <__fixunssfsi+0x3e>
    1522:	e1 f0       	breq	.+56     	; 0x155c <__fixunssfsi+0x4c>
    1524:	66 0f       	add	r22, r22
    1526:	77 1f       	adc	r23, r23
    1528:	88 1f       	adc	r24, r24
    152a:	99 1f       	adc	r25, r25
    152c:	1a f0       	brmi	.+6      	; 0x1534 <__fixunssfsi+0x24>
    152e:	ba 95       	dec	r27
    1530:	c9 f7       	brne	.-14     	; 0x1524 <__fixunssfsi+0x14>
    1532:	14 c0       	rjmp	.+40     	; 0x155c <__fixunssfsi+0x4c>
    1534:	b1 30       	cpi	r27, 0x01	; 1
    1536:	91 f0       	breq	.+36     	; 0x155c <__fixunssfsi+0x4c>
    1538:	0e 94 62 0b 	call	0x16c4	; 0x16c4 <__fp_zero>
    153c:	b1 e0       	ldi	r27, 0x01	; 1
    153e:	08 95       	ret
    1540:	0c 94 62 0b 	jmp	0x16c4	; 0x16c4 <__fp_zero>
    1544:	67 2f       	mov	r22, r23
    1546:	78 2f       	mov	r23, r24
    1548:	88 27       	eor	r24, r24
    154a:	b8 5f       	subi	r27, 0xF8	; 248
    154c:	39 f0       	breq	.+14     	; 0x155c <__fixunssfsi+0x4c>
    154e:	b9 3f       	cpi	r27, 0xF9	; 249
    1550:	cc f3       	brlt	.-14     	; 0x1544 <__fixunssfsi+0x34>
    1552:	86 95       	lsr	r24
    1554:	77 95       	ror	r23
    1556:	67 95       	ror	r22
    1558:	b3 95       	inc	r27
    155a:	d9 f7       	brne	.-10     	; 0x1552 <__fixunssfsi+0x42>
    155c:	3e f4       	brtc	.+14     	; 0x156c <__fixunssfsi+0x5c>
    155e:	90 95       	com	r25
    1560:	80 95       	com	r24
    1562:	70 95       	com	r23
    1564:	61 95       	neg	r22
    1566:	7f 4f       	sbci	r23, 0xFF	; 255
    1568:	8f 4f       	sbci	r24, 0xFF	; 255
    156a:	9f 4f       	sbci	r25, 0xFF	; 255
    156c:	08 95       	ret

0000156e <__floatunsisf>:
    156e:	e8 94       	clt
    1570:	09 c0       	rjmp	.+18     	; 0x1584 <__floatsisf+0x12>

00001572 <__floatsisf>:
    1572:	97 fb       	bst	r25, 7
    1574:	3e f4       	brtc	.+14     	; 0x1584 <__floatsisf+0x12>
    1576:	90 95       	com	r25
    1578:	80 95       	com	r24
    157a:	70 95       	com	r23
    157c:	61 95       	neg	r22
    157e:	7f 4f       	sbci	r23, 0xFF	; 255
    1580:	8f 4f       	sbci	r24, 0xFF	; 255
    1582:	9f 4f       	sbci	r25, 0xFF	; 255
    1584:	99 23       	and	r25, r25
    1586:	a9 f0       	breq	.+42     	; 0x15b2 <__floatsisf+0x40>
    1588:	f9 2f       	mov	r31, r25
    158a:	96 e9       	ldi	r25, 0x96	; 150
    158c:	bb 27       	eor	r27, r27
    158e:	93 95       	inc	r25
    1590:	f6 95       	lsr	r31
    1592:	87 95       	ror	r24
    1594:	77 95       	ror	r23
    1596:	67 95       	ror	r22
    1598:	b7 95       	ror	r27
    159a:	f1 11       	cpse	r31, r1
    159c:	f8 cf       	rjmp	.-16     	; 0x158e <__floatsisf+0x1c>
    159e:	fa f4       	brpl	.+62     	; 0x15de <__floatsisf+0x6c>
    15a0:	bb 0f       	add	r27, r27
    15a2:	11 f4       	brne	.+4      	; 0x15a8 <__floatsisf+0x36>
    15a4:	60 ff       	sbrs	r22, 0
    15a6:	1b c0       	rjmp	.+54     	; 0x15de <__floatsisf+0x6c>
    15a8:	6f 5f       	subi	r22, 0xFF	; 255
    15aa:	7f 4f       	sbci	r23, 0xFF	; 255
    15ac:	8f 4f       	sbci	r24, 0xFF	; 255
    15ae:	9f 4f       	sbci	r25, 0xFF	; 255
    15b0:	16 c0       	rjmp	.+44     	; 0x15de <__floatsisf+0x6c>
    15b2:	88 23       	and	r24, r24
    15b4:	11 f0       	breq	.+4      	; 0x15ba <__floatsisf+0x48>
    15b6:	96 e9       	ldi	r25, 0x96	; 150
    15b8:	11 c0       	rjmp	.+34     	; 0x15dc <__floatsisf+0x6a>
    15ba:	77 23       	and	r23, r23
    15bc:	21 f0       	breq	.+8      	; 0x15c6 <__floatsisf+0x54>
    15be:	9e e8       	ldi	r25, 0x8E	; 142
    15c0:	87 2f       	mov	r24, r23
    15c2:	76 2f       	mov	r23, r22
    15c4:	05 c0       	rjmp	.+10     	; 0x15d0 <__floatsisf+0x5e>
    15c6:	66 23       	and	r22, r22
    15c8:	71 f0       	breq	.+28     	; 0x15e6 <__floatsisf+0x74>
    15ca:	96 e8       	ldi	r25, 0x86	; 134
    15cc:	86 2f       	mov	r24, r22
    15ce:	70 e0       	ldi	r23, 0x00	; 0
    15d0:	60 e0       	ldi	r22, 0x00	; 0
    15d2:	2a f0       	brmi	.+10     	; 0x15de <__floatsisf+0x6c>
    15d4:	9a 95       	dec	r25
    15d6:	66 0f       	add	r22, r22
    15d8:	77 1f       	adc	r23, r23
    15da:	88 1f       	adc	r24, r24
    15dc:	da f7       	brpl	.-10     	; 0x15d4 <__floatsisf+0x62>
    15de:	88 0f       	add	r24, r24
    15e0:	96 95       	lsr	r25
    15e2:	87 95       	ror	r24
    15e4:	97 f9       	bld	r25, 7
    15e6:	08 95       	ret

000015e8 <__fp_cmp>:
    15e8:	99 0f       	add	r25, r25
    15ea:	00 08       	sbc	r0, r0
    15ec:	55 0f       	add	r21, r21
    15ee:	aa 0b       	sbc	r26, r26
    15f0:	e0 e8       	ldi	r30, 0x80	; 128
    15f2:	fe ef       	ldi	r31, 0xFE	; 254
    15f4:	16 16       	cp	r1, r22
    15f6:	17 06       	cpc	r1, r23
    15f8:	e8 07       	cpc	r30, r24
    15fa:	f9 07       	cpc	r31, r25
    15fc:	c0 f0       	brcs	.+48     	; 0x162e <__fp_cmp+0x46>
    15fe:	12 16       	cp	r1, r18
    1600:	13 06       	cpc	r1, r19
    1602:	e4 07       	cpc	r30, r20
    1604:	f5 07       	cpc	r31, r21
    1606:	98 f0       	brcs	.+38     	; 0x162e <__fp_cmp+0x46>
    1608:	62 1b       	sub	r22, r18
    160a:	73 0b       	sbc	r23, r19
    160c:	84 0b       	sbc	r24, r20
    160e:	95 0b       	sbc	r25, r21
    1610:	39 f4       	brne	.+14     	; 0x1620 <__fp_cmp+0x38>
    1612:	0a 26       	eor	r0, r26
    1614:	61 f0       	breq	.+24     	; 0x162e <__fp_cmp+0x46>
    1616:	23 2b       	or	r18, r19
    1618:	24 2b       	or	r18, r20
    161a:	25 2b       	or	r18, r21
    161c:	21 f4       	brne	.+8      	; 0x1626 <__fp_cmp+0x3e>
    161e:	08 95       	ret
    1620:	0a 26       	eor	r0, r26
    1622:	09 f4       	brne	.+2      	; 0x1626 <__fp_cmp+0x3e>
    1624:	a1 40       	sbci	r26, 0x01	; 1
    1626:	a6 95       	lsr	r26
    1628:	8f ef       	ldi	r24, 0xFF	; 255
    162a:	81 1d       	adc	r24, r1
    162c:	81 1d       	adc	r24, r1
    162e:	08 95       	ret

00001630 <__fp_inf>:
    1630:	97 f9       	bld	r25, 7
    1632:	9f 67       	ori	r25, 0x7F	; 127
    1634:	80 e8       	ldi	r24, 0x80	; 128
    1636:	70 e0       	ldi	r23, 0x00	; 0
    1638:	60 e0       	ldi	r22, 0x00	; 0
    163a:	08 95       	ret

0000163c <__fp_nan>:
    163c:	9f ef       	ldi	r25, 0xFF	; 255
    163e:	80 ec       	ldi	r24, 0xC0	; 192
    1640:	08 95       	ret

00001642 <__fp_pscA>:
    1642:	00 24       	eor	r0, r0
    1644:	0a 94       	dec	r0
    1646:	16 16       	cp	r1, r22
    1648:	17 06       	cpc	r1, r23
    164a:	18 06       	cpc	r1, r24
    164c:	09 06       	cpc	r0, r25
    164e:	08 95       	ret

00001650 <__fp_pscB>:
    1650:	00 24       	eor	r0, r0
    1652:	0a 94       	dec	r0
    1654:	12 16       	cp	r1, r18
    1656:	13 06       	cpc	r1, r19
    1658:	14 06       	cpc	r1, r20
    165a:	05 06       	cpc	r0, r21
    165c:	08 95       	ret

0000165e <__fp_round>:
    165e:	09 2e       	mov	r0, r25
    1660:	03 94       	inc	r0
    1662:	00 0c       	add	r0, r0
    1664:	11 f4       	brne	.+4      	; 0x166a <__fp_round+0xc>
    1666:	88 23       	and	r24, r24
    1668:	52 f0       	brmi	.+20     	; 0x167e <__fp_round+0x20>
    166a:	bb 0f       	add	r27, r27
    166c:	40 f4       	brcc	.+16     	; 0x167e <__fp_round+0x20>
    166e:	bf 2b       	or	r27, r31
    1670:	11 f4       	brne	.+4      	; 0x1676 <__fp_round+0x18>
    1672:	60 ff       	sbrs	r22, 0
    1674:	04 c0       	rjmp	.+8      	; 0x167e <__fp_round+0x20>
    1676:	6f 5f       	subi	r22, 0xFF	; 255
    1678:	7f 4f       	sbci	r23, 0xFF	; 255
    167a:	8f 4f       	sbci	r24, 0xFF	; 255
    167c:	9f 4f       	sbci	r25, 0xFF	; 255
    167e:	08 95       	ret

00001680 <__fp_split3>:
    1680:	57 fd       	sbrc	r21, 7
    1682:	90 58       	subi	r25, 0x80	; 128
    1684:	44 0f       	add	r20, r20
    1686:	55 1f       	adc	r21, r21
    1688:	59 f0       	breq	.+22     	; 0x16a0 <__fp_splitA+0x10>
    168a:	5f 3f       	cpi	r21, 0xFF	; 255
    168c:	71 f0       	breq	.+28     	; 0x16aa <__fp_splitA+0x1a>
    168e:	47 95       	ror	r20

00001690 <__fp_splitA>:
    1690:	88 0f       	add	r24, r24
    1692:	97 fb       	bst	r25, 7
    1694:	99 1f       	adc	r25, r25
    1696:	61 f0       	breq	.+24     	; 0x16b0 <__fp_splitA+0x20>
    1698:	9f 3f       	cpi	r25, 0xFF	; 255
    169a:	79 f0       	breq	.+30     	; 0x16ba <__fp_splitA+0x2a>
    169c:	87 95       	ror	r24
    169e:	08 95       	ret
    16a0:	12 16       	cp	r1, r18
    16a2:	13 06       	cpc	r1, r19
    16a4:	14 06       	cpc	r1, r20
    16a6:	55 1f       	adc	r21, r21
    16a8:	f2 cf       	rjmp	.-28     	; 0x168e <__fp_split3+0xe>
    16aa:	46 95       	lsr	r20
    16ac:	f1 df       	rcall	.-30     	; 0x1690 <__fp_splitA>
    16ae:	08 c0       	rjmp	.+16     	; 0x16c0 <__fp_splitA+0x30>
    16b0:	16 16       	cp	r1, r22
    16b2:	17 06       	cpc	r1, r23
    16b4:	18 06       	cpc	r1, r24
    16b6:	99 1f       	adc	r25, r25
    16b8:	f1 cf       	rjmp	.-30     	; 0x169c <__fp_splitA+0xc>
    16ba:	86 95       	lsr	r24
    16bc:	71 05       	cpc	r23, r1
    16be:	61 05       	cpc	r22, r1
    16c0:	08 94       	sec
    16c2:	08 95       	ret

000016c4 <__fp_zero>:
    16c4:	e8 94       	clt

000016c6 <__fp_szero>:
    16c6:	bb 27       	eor	r27, r27
    16c8:	66 27       	eor	r22, r22
    16ca:	77 27       	eor	r23, r23
    16cc:	cb 01       	movw	r24, r22
    16ce:	97 f9       	bld	r25, 7
    16d0:	08 95       	ret

000016d2 <__gesf2>:
    16d2:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <__fp_cmp>
    16d6:	08 f4       	brcc	.+2      	; 0x16da <__gesf2+0x8>
    16d8:	8f ef       	ldi	r24, 0xFF	; 255
    16da:	08 95       	ret

000016dc <__mulsf3>:
    16dc:	0e 94 81 0b 	call	0x1702	; 0x1702 <__mulsf3x>
    16e0:	0c 94 2f 0b 	jmp	0x165e	; 0x165e <__fp_round>
    16e4:	0e 94 21 0b 	call	0x1642	; 0x1642 <__fp_pscA>
    16e8:	38 f0       	brcs	.+14     	; 0x16f8 <__mulsf3+0x1c>
    16ea:	0e 94 28 0b 	call	0x1650	; 0x1650 <__fp_pscB>
    16ee:	20 f0       	brcs	.+8      	; 0x16f8 <__mulsf3+0x1c>
    16f0:	95 23       	and	r25, r21
    16f2:	11 f0       	breq	.+4      	; 0x16f8 <__mulsf3+0x1c>
    16f4:	0c 94 18 0b 	jmp	0x1630	; 0x1630 <__fp_inf>
    16f8:	0c 94 1e 0b 	jmp	0x163c	; 0x163c <__fp_nan>
    16fc:	11 24       	eor	r1, r1
    16fe:	0c 94 63 0b 	jmp	0x16c6	; 0x16c6 <__fp_szero>

00001702 <__mulsf3x>:
    1702:	0e 94 40 0b 	call	0x1680	; 0x1680 <__fp_split3>
    1706:	70 f3       	brcs	.-36     	; 0x16e4 <__mulsf3+0x8>

00001708 <__mulsf3_pse>:
    1708:	95 9f       	mul	r25, r21
    170a:	c1 f3       	breq	.-16     	; 0x16fc <__mulsf3+0x20>
    170c:	95 0f       	add	r25, r21
    170e:	50 e0       	ldi	r21, 0x00	; 0
    1710:	55 1f       	adc	r21, r21
    1712:	62 9f       	mul	r22, r18
    1714:	f0 01       	movw	r30, r0
    1716:	72 9f       	mul	r23, r18
    1718:	bb 27       	eor	r27, r27
    171a:	f0 0d       	add	r31, r0
    171c:	b1 1d       	adc	r27, r1
    171e:	63 9f       	mul	r22, r19
    1720:	aa 27       	eor	r26, r26
    1722:	f0 0d       	add	r31, r0
    1724:	b1 1d       	adc	r27, r1
    1726:	aa 1f       	adc	r26, r26
    1728:	64 9f       	mul	r22, r20
    172a:	66 27       	eor	r22, r22
    172c:	b0 0d       	add	r27, r0
    172e:	a1 1d       	adc	r26, r1
    1730:	66 1f       	adc	r22, r22
    1732:	82 9f       	mul	r24, r18
    1734:	22 27       	eor	r18, r18
    1736:	b0 0d       	add	r27, r0
    1738:	a1 1d       	adc	r26, r1
    173a:	62 1f       	adc	r22, r18
    173c:	73 9f       	mul	r23, r19
    173e:	b0 0d       	add	r27, r0
    1740:	a1 1d       	adc	r26, r1
    1742:	62 1f       	adc	r22, r18
    1744:	83 9f       	mul	r24, r19
    1746:	a0 0d       	add	r26, r0
    1748:	61 1d       	adc	r22, r1
    174a:	22 1f       	adc	r18, r18
    174c:	74 9f       	mul	r23, r20
    174e:	33 27       	eor	r19, r19
    1750:	a0 0d       	add	r26, r0
    1752:	61 1d       	adc	r22, r1
    1754:	23 1f       	adc	r18, r19
    1756:	84 9f       	mul	r24, r20
    1758:	60 0d       	add	r22, r0
    175a:	21 1d       	adc	r18, r1
    175c:	82 2f       	mov	r24, r18
    175e:	76 2f       	mov	r23, r22
    1760:	6a 2f       	mov	r22, r26
    1762:	11 24       	eor	r1, r1
    1764:	9f 57       	subi	r25, 0x7F	; 127
    1766:	50 40       	sbci	r21, 0x00	; 0
    1768:	9a f0       	brmi	.+38     	; 0x1790 <__mulsf3_pse+0x88>
    176a:	f1 f0       	breq	.+60     	; 0x17a8 <__mulsf3_pse+0xa0>
    176c:	88 23       	and	r24, r24
    176e:	4a f0       	brmi	.+18     	; 0x1782 <__mulsf3_pse+0x7a>
    1770:	ee 0f       	add	r30, r30
    1772:	ff 1f       	adc	r31, r31
    1774:	bb 1f       	adc	r27, r27
    1776:	66 1f       	adc	r22, r22
    1778:	77 1f       	adc	r23, r23
    177a:	88 1f       	adc	r24, r24
    177c:	91 50       	subi	r25, 0x01	; 1
    177e:	50 40       	sbci	r21, 0x00	; 0
    1780:	a9 f7       	brne	.-22     	; 0x176c <__mulsf3_pse+0x64>
    1782:	9e 3f       	cpi	r25, 0xFE	; 254
    1784:	51 05       	cpc	r21, r1
    1786:	80 f0       	brcs	.+32     	; 0x17a8 <__mulsf3_pse+0xa0>
    1788:	0c 94 18 0b 	jmp	0x1630	; 0x1630 <__fp_inf>
    178c:	0c 94 63 0b 	jmp	0x16c6	; 0x16c6 <__fp_szero>
    1790:	5f 3f       	cpi	r21, 0xFF	; 255
    1792:	e4 f3       	brlt	.-8      	; 0x178c <__mulsf3_pse+0x84>
    1794:	98 3e       	cpi	r25, 0xE8	; 232
    1796:	d4 f3       	brlt	.-12     	; 0x178c <__mulsf3_pse+0x84>
    1798:	86 95       	lsr	r24
    179a:	77 95       	ror	r23
    179c:	67 95       	ror	r22
    179e:	b7 95       	ror	r27
    17a0:	f7 95       	ror	r31
    17a2:	e7 95       	ror	r30
    17a4:	9f 5f       	subi	r25, 0xFF	; 255
    17a6:	c1 f7       	brne	.-16     	; 0x1798 <__mulsf3_pse+0x90>
    17a8:	fe 2b       	or	r31, r30
    17aa:	88 0f       	add	r24, r24
    17ac:	91 1d       	adc	r25, r1
    17ae:	96 95       	lsr	r25
    17b0:	87 95       	ror	r24
    17b2:	97 f9       	bld	r25, 7
    17b4:	08 95       	ret

000017b6 <__udivmodsi4>:
    17b6:	a1 e2       	ldi	r26, 0x21	; 33
    17b8:	1a 2e       	mov	r1, r26
    17ba:	aa 1b       	sub	r26, r26
    17bc:	bb 1b       	sub	r27, r27
    17be:	fd 01       	movw	r30, r26
    17c0:	0d c0       	rjmp	.+26     	; 0x17dc <__udivmodsi4_ep>

000017c2 <__udivmodsi4_loop>:
    17c2:	aa 1f       	adc	r26, r26
    17c4:	bb 1f       	adc	r27, r27
    17c6:	ee 1f       	adc	r30, r30
    17c8:	ff 1f       	adc	r31, r31
    17ca:	a2 17       	cp	r26, r18
    17cc:	b3 07       	cpc	r27, r19
    17ce:	e4 07       	cpc	r30, r20
    17d0:	f5 07       	cpc	r31, r21
    17d2:	20 f0       	brcs	.+8      	; 0x17dc <__udivmodsi4_ep>
    17d4:	a2 1b       	sub	r26, r18
    17d6:	b3 0b       	sbc	r27, r19
    17d8:	e4 0b       	sbc	r30, r20
    17da:	f5 0b       	sbc	r31, r21

000017dc <__udivmodsi4_ep>:
    17dc:	66 1f       	adc	r22, r22
    17de:	77 1f       	adc	r23, r23
    17e0:	88 1f       	adc	r24, r24
    17e2:	99 1f       	adc	r25, r25
    17e4:	1a 94       	dec	r1
    17e6:	69 f7       	brne	.-38     	; 0x17c2 <__udivmodsi4_loop>
    17e8:	60 95       	com	r22
    17ea:	70 95       	com	r23
    17ec:	80 95       	com	r24
    17ee:	90 95       	com	r25
    17f0:	9b 01       	movw	r18, r22
    17f2:	ac 01       	movw	r20, r24
    17f4:	bd 01       	movw	r22, r26
    17f6:	cf 01       	movw	r24, r30
    17f8:	08 95       	ret

000017fa <__tablejump2__>:
    17fa:	ee 0f       	add	r30, r30
    17fc:	ff 1f       	adc	r31, r31
    17fe:	05 90       	lpm	r0, Z+
    1800:	f4 91       	lpm	r31, Z
    1802:	e0 2d       	mov	r30, r0
    1804:	09 94       	ijmp

00001806 <_exit>:
    1806:	f8 94       	cli

00001808 <__stop_program>:
    1808:	ff cf       	rjmp	.-2      	; 0x1808 <__stop_program>
